<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <_.fcp.WorkbookOptimizerRuleConfig.true...WorkbookOptimizerRuleConfig />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='JOBportalfile' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='job_descriptions' inline='true' name='federated.14yi1ol17hs72s13bilb61tgayxm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='job_descriptions' name='textscan.159q82y0p52y5s1ctnqv20jeeu2b'>
            <connection class='textscan' directory='C:/Users/DELL/Downloads' filename='job_descriptions.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.159q82y0p52y5s1ctnqv20jeeu2b' name='job_descriptions.csv' table='[job_descriptions#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Job Id' ordinal='0' />
            <column datatype='string' name='Experience' ordinal='1' />
            <column datatype='string' name='Qualifications' ordinal='2' />
            <column datatype='string' name='Salary Range' ordinal='3' />
            <column datatype='string' name='location' ordinal='4' />
            <column datatype='string' name='Country' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='Work Type' ordinal='8' />
            <column datatype='integer' name='Company Size' ordinal='9' />
            <column datatype='date' name='Job Posting Date' ordinal='10' />
            <column datatype='string' name='Preference' ordinal='11' />
            <column datatype='string' name='Contact Person' ordinal='12' />
            <column datatype='string' name='Contact' ordinal='13' />
            <column datatype='string' name='Job Title' ordinal='14' />
            <column datatype='string' name='Role' ordinal='15' />
            <column datatype='string' name='Job Portal' ordinal='16' />
            <column datatype='string' name='Job Description' ordinal='17' />
            <column datatype='string' name='Benefits' ordinal='18' />
            <column datatype='string' name='skills' ordinal='19' />
            <column datatype='string' name='Responsibilities' ordinal='20' />
            <column datatype='string' name='Company' ordinal='21' />
            <column datatype='string' name='Company Profile' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Job Id]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Job Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Experience]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Experience</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualifications</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Qualifications]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Qualifications</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary Range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Salary Range]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Salary Range</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Work Type]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Work Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Company Size]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Company Size</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Posting Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Job Posting Date]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Job Posting Date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preference</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Preference]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Preference</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contact Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contact Person]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Contact Person</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contact</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contact]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Contact</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Job Title]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Job Title</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Role</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Role]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Role</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Portal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Job Portal]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Job Portal</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Job Description]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Job Description</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Benefits</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Benefits]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Benefits</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skills</remote-name>
            <remote-type>129</remote-type>
            <local-name>[skills]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>skills</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Responsibilities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Responsibilities]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Responsibilities</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company Profile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company Profile]</local-name>
            <parent-name>[job_descriptions.csv]</parent-name>
            <remote-alias>Company Profile</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Valid country' datatype='string' name='[Calculation_210543283559550976]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;    NOT (&#13;&#10;        [Country] IN (&#13;&#10;            &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &quot;Brunei&quot;,&#13;&#10;            &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &quot;Iran&quot;, &quot;Iraq&quot;, &quot;Israel&quot;,&#13;&#10;            &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &quot;Kyrgyzstan&quot;, &quot;Laos&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;,&#13;&#10;            &quot;Maldives&quot;, &quot;Mongolia&quot;, &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Palestine&quot;,&#13;&#10;            &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Russia&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;South Korea&quot;, &quot;Sri Lanka&quot;,&#13;&#10;            &quot;Syria&quot;, &quot;Taiwan&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &quot;Turkmenistan&quot;,&#13;&#10;            &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Vietnam&quot;, &quot;Yemen&quot;&#13;&#10;        )&#13;&#10;    )&#13;&#10;    AND LEFT([Country], 1) != &apos;C&apos;&#13;&#10;    AND [latitude] &gt;= 10&#13;&#10;THEN &quot;Keep&quot;&#13;&#10;ELSE &quot;Remove&quot;&#13;&#10;END' />
      </column>
      <column caption='Role an djob title' datatype='string' name='[Calculation_210543283560960001]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Role] = &quot;Data Engineer&quot; AND [Job Title] = &quot;Data Scientist&quot; THEN &quot;Match&quot; ELSE &quot;Nope&quot; END' />
      </column>
      <column caption='Current IST time' datatype='integer' name='[Calculation_627689199646900226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, NOW() + (5.5 / 24))' />
      </column>
      <column caption='Current time' datatype='datetime' name='[Calculation_765048988332572675]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='NOW()' />
      </column>
      <column caption='estimated company size' datatype='boolean' name='[Calculation_831195607419088896]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Company Size]&lt;50000' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Job Id]' role='dimension' type='ordinal' />
      <column caption='job_descriptions.csv' datatype='table' name='[__tableau_internal_object_id__].[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Skills' datatype='string' name='[skills]' role='dimension' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/DELL/OneDrive/Documents/My Tableau Repository/Workbooks/JOB portal file.twb Files/Data/TableauTemp/#TableauTemp_0jzgv1n14j3rn30zmgdti1t8jjlv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/24/2025 02:40:31 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Job Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Job Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Id</remote-alias>
              <ordinal>0</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1615940</approx-count>
              <contains-null>true</contains-null>
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Experience</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Experience]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Experience</remote-alias>
              <ordinal>1</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Qualifications</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Qualifications]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Qualifications</remote-alias>
              <ordinal>2</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Salary Range</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Salary Range]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Salary Range</remote-alias>
              <ordinal>3</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>561</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>4</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>5</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>6</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>7</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Work Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Work Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Work Type</remote-alias>
              <ordinal>8</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company Size</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Company Size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company Size</remote-alias>
              <ordinal>9</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>415294</approx-count>
              <contains-null>true</contains-null>
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Job Posting Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Job Posting Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Posting Date</remote-alias>
              <ordinal>10</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>731</approx-count>
              <contains-null>true</contains-null>
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Preference</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Preference]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Preference</remote-alias>
              <ordinal>11</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Contact Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contact Person]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contact Person</remote-alias>
              <ordinal>12</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>312265</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Contact</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contact]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contact</remote-alias>
              <ordinal>13</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1615940</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Job Title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Job Title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Title</remote-alias>
              <ordinal>14</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>147</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Role</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Role]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Role</remote-alias>
              <ordinal>15</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>376</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Job Portal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Job Portal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Portal</remote-alias>
              <ordinal>16</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Job Description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Job Description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Description</remote-alias>
              <ordinal>17</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>376</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Benefits</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Benefits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Benefits</remote-alias>
              <ordinal>18</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>skills</remote-name>
              <remote-type>129</remote-type>
              <local-name>[skills]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>skills</remote-alias>
              <ordinal>19</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>376</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Responsibilities</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Responsibilities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Responsibilities</remote-alias>
              <ordinal>20</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>375</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company</remote-alias>
              <ordinal>21</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>888</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company Profile</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company Profile]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company Profile</remote-alias>
              <ordinal>22</ordinal>
              <family>job_descriptions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>885</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='job_descriptions.csv' id='job_descriptions.csv_4A20457A362C4BECBE967FB51DDBE7F5'>
            <properties context=''>
              <relation connection='textscan.159q82y0p52y5s1ctnqv20jeeu2b' name='job_descriptions.csv' table='[job_descriptions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Job Id' ordinal='0' />
                  <column datatype='string' name='Experience' ordinal='1' />
                  <column datatype='string' name='Qualifications' ordinal='2' />
                  <column datatype='string' name='Salary Range' ordinal='3' />
                  <column datatype='string' name='location' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='real' name='latitude' ordinal='6' />
                  <column datatype='real' name='longitude' ordinal='7' />
                  <column datatype='string' name='Work Type' ordinal='8' />
                  <column datatype='integer' name='Company Size' ordinal='9' />
                  <column datatype='date' name='Job Posting Date' ordinal='10' />
                  <column datatype='string' name='Preference' ordinal='11' />
                  <column datatype='string' name='Contact Person' ordinal='12' />
                  <column datatype='string' name='Contact' ordinal='13' />
                  <column datatype='string' name='Job Title' ordinal='14' />
                  <column datatype='string' name='Role' ordinal='15' />
                  <column datatype='string' name='Job Portal' ordinal='16' />
                  <column datatype='string' name='Job Description' ordinal='17' />
                  <column datatype='string' name='Benefits' ordinal='18' />
                  <column datatype='string' name='skills' ordinal='19' />
                  <column datatype='string' name='Responsibilities' ordinal='20' />
                  <column datatype='string' name='Company' ordinal='21' />
                  <column datatype='string' name='Company Profile' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Company'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk]' direction='DESC' measure-to-sort-by='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' direction='DESC' measure-to-sort-by='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{95791EBE-DD99-48C6-8FE4-2AEAEF9757CC}' />
    </worksheet>
    <worksheet name='Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' />
              <lod column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' />
              <lod column='[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:latitude:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]) * [federated.14yi1ol17hs72s13bilb61tgayxm].[Latitude (generated)])</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{90E4D1C1-D134-439D-B8FA-059C41B11B07}' />
    </worksheet>
    <worksheet name='Experience'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Experience]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Experience]' derivation='None' name='[none:Experience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{47C9522A-067A-45A1-B5E2-58E46372606A}' />
    </worksheet>
    <worksheet name='Preference'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Preference]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Preference]' derivation='None' name='[none:Preference:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Interaction Designer&quot;</bucket>
              <bucket>&quot;Network Administrator&quot;</bucket>
              <bucket>&quot;Social Media Manager&quot;</bucket>
              <bucket>&quot;User Interface Designer&quot;</bucket>
              <bucket>&quot;User Experience Designer&quot;</bucket>
              <bucket>&quot;Procurement Analyst&quot;</bucket>
              <bucket>&quot;SEO Specialist&quot;</bucket>
              <bucket>&quot;Social Media Analyst&quot;</bucket>
              <bucket>&quot;Demand Planner&quot;</bucket>
              <bucket>&quot;Executive Assistant&quot;</bucket>
              <bucket>&quot;Retirement Planner&quot;</bucket>
              <bucket>&quot;Office Manager&quot;</bucket>
              <bucket>&quot;Backend Developer&quot;</bucket>
              <bucket>&quot;Database Administrator&quot;</bucket>
              <bucket>&quot;Procurement Manager&quot;</bucket>
              <bucket>&quot;Customer Success Manager&quot;</bucket>
              <bucket>&quot;Data Analyst&quot;</bucket>
              <bucket>&quot;Frontend Developer&quot;</bucket>
              <bucket>&quot;Quality Assurance Analyst&quot;</bucket>
              <bucket>&quot;Training Coordinator&quot;</bucket>
              <bucket>&quot;Account Executive&quot;</bucket>
              <bucket>&quot;Market Researcher&quot;</bucket>
              <bucket>&quot;Product Marketing Manager&quot;</bucket>
              <bucket>&quot;Client Relationship Manager&quot;</bucket>
              <bucket>&quot;IT Project Manager&quot;</bucket>
              <bucket>&quot;Sales Account Manager&quot;</bucket>
              <bucket>&quot;Systems Administrator&quot;</bucket>
              <bucket>&quot;Front-End Developer&quot;</bucket>
              <bucket>&quot;DevOps Engineer&quot;</bucket>
              <bucket>&quot;Sustainable Design Specialist&quot;</bucket>
              <bucket>&quot;Business Intelligence Analyst&quot;</bucket>
              <bucket>&quot;Network Security Analyst&quot;</bucket>
              <bucket>&quot;Personal Assistant&quot;</bucket>
              <bucket>&quot;Supply Chain Manager&quot;</bucket>
              <bucket>&quot;Data Scientist&quot;</bucket>
              <bucket>&quot;Wedding Planner&quot;</bucket>
              <bucket>&quot;Supply Chain Coordinator&quot;</bucket>
              <bucket>&quot;Inside Sales Representative&quot;</bucket>
              <bucket>&quot;Manufacturing Engineer&quot;</bucket>
              <bucket>&quot;Water Resources Engineer&quot;</bucket>
              <bucket>&quot;Administrative Coordinator&quot;</bucket>
              <bucket>&quot;Data Entry Specialist&quot;</bucket>
              <bucket>&quot;Investment Advisor&quot;</bucket>
              <bucket>&quot;Event Planner&quot;</bucket>
              <bucket>&quot;Financial Analyst&quot;</bucket>
              <bucket>&quot;UX/UI Designer&quot;</bucket>
              <bucket>&quot;Customer Support Specialist&quot;</bucket>
              <bucket>&quot;Content Strategist&quot;</bucket>
              <bucket>&quot;Portfolio Manager&quot;</bucket>
              <bucket>&quot;Benefits Coordinator&quot;</bucket>
              <bucket>&quot;Event Coordinator&quot;</bucket>
              <bucket>&quot;Residential Landscape Designer&quot;</bucket>
              <bucket>&quot;Paralegal&quot;</bucket>
              <bucket>&quot;Research Analyst&quot;</bucket>
              <bucket>&quot;Market Research Analyst&quot;</bucket>
              <bucket>&quot;Family Law Attorney&quot;</bucket>
              <bucket>&quot;Content Creator&quot;</bucket>
              <bucket>&quot;Automation Tester&quot;</bucket>
              <bucket>&quot;UI/UX Designer&quot;</bucket>
              <bucket>&quot;Inventory Manager&quot;</bucket>
              <bucket>&quot;IT Support Specialist&quot;</bucket>
              <bucket>&quot;Geriatric Occupational Therapist&quot;</bucket>
              <bucket>&quot;Call Center Agent&quot;</bucket>
              <bucket>&quot;Digital Marketing Analyst&quot;</bucket>
              <bucket>&quot;Territory Sales Manager&quot;</bucket>
              <bucket>&quot;Digital Marketing Specialist&quot;</bucket>
              <bucket>&quot;Legal Secretary&quot;</bucket>
              <bucket>&quot;Account Strategist&quot;</bucket>
              <bucket>&quot;Sourcing Analyst&quot;</bucket>
              <bucket>&quot;Corporate Event Planner&quot;</bucket>
              <bucket>&quot;SEO Analyst&quot;</bucket>
              <bucket>&quot;IT Analyst&quot;</bucket>
              <bucket>&quot;Mental Health Counselor&quot;</bucket>
              <bucket>&quot;Forensic Accountant&quot;</bucket>
              <bucket>&quot;SEO Content Strategist&quot;</bucket>
              <bucket>&quot;SQL Database Developer&quot;</bucket>
              <bucket>&quot;Business Tax Consultant&quot;</bucket>
              <bucket>&quot;Marketing Specialist&quot;</bucket>
              <bucket>&quot;Marketing Automation Specialist&quot;</bucket>
              <bucket>&quot;Enterprise Architect&quot;</bucket>
              <bucket>&quot;Web Graphic Designer&quot;</bucket>
              <bucket>&quot;Mediator&quot;</bucket>
              <bucket>&quot;Data Architect&quot;</bucket>
              <bucket>&quot;Real Estate Paralegal&quot;</bucket>
              <bucket>&quot;Fine Arts Instructor&quot;</bucket>
              <bucket>&quot;Facilities Manager&quot;</bucket>
              <bucket>&quot;Social Media Influencer&quot;</bucket>
              <bucket>&quot;Process Engineer&quot;</bucket>
              <bucket>&quot;Service Quality Assurance Manager&quot;</bucket>
              <bucket>&quot;Intellectual Property Lawyer&quot;</bucket>
              <bucket>&quot;Primary Care Physician Assistant&quot;</bucket>
              <bucket>&quot;Live Chat Support Agent&quot;</bucket>
              <bucket>&quot;Electrical Engineer&quot;</bucket>
              <bucket>&quot;Frontend Web Developer&quot;</bucket>
              <bucket>&quot;In-House Counsel&quot;</bucket>
              <bucket>&quot;Media Relations Specialist&quot;</bucket>
              <bucket>&quot;Brand Promoter&quot;</bucket>
              <bucket>&quot;Equine Veterinarian&quot;</bucket>
              <bucket>&quot;Operations Director&quot;</bucket>
              <bucket>&quot;Small Animal Veterinarian&quot;</bucket>
              <bucket>&quot;Primary Care Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Data Analyst Researcher&quot;</bucket>
              <bucket>&quot;Sales Account Executive&quot;</bucket>
              <bucket>&quot;Digital Marketing Manager&quot;</bucket>
              <bucket>&quot;Dental Public Health Hygienist&quot;</bucket>
              <bucket>&quot;Creative Director&quot;</bucket>
              <bucket>&quot;Network Security Engineer&quot;</bucket>
              <bucket>&quot;Employee Development Manager&quot;</bucket>
              <bucket>&quot;Content SEO Strategist&quot;</bucket>
              <bucket>&quot;Mobile App Developer&quot;</bucket>
              <bucket>&quot;JavaScript Developer&quot;</bucket>
              <bucket>&quot;Logistics Manager&quot;</bucket>
              <bucket>&quot;Mergers and Acquisitions Advisor&quot;</bucket>
              <bucket>&quot;Strategic Sourcing Manager&quot;</bucket>
              <bucket>&quot;Security Consultant&quot;</bucket>
              <bucket>&quot;Outside Sales Representative&quot;</bucket>
              <bucket>&quot;Project Manager&quot;</bucket>
              <bucket>&quot;Java Software Engineer&quot;</bucket>
              <bucket>&quot;Hospitality Interior Designer&quot;</bucket>
              <bucket>&quot;Usability Analyst&quot;</bucket>
              <bucket>&quot;Cybersecurity Analyst&quot;</bucket>
              <bucket>&quot;Investment Analyst&quot;</bucket>
              <bucket>&quot;Pediatric Specialist&quot;</bucket>
              <bucket>&quot;Litigation Support Specialist&quot;</bucket>
              <bucket>&quot;Personal Tax Consultant&quot;</bucket>
              <bucket>&quot;Sales Manager&quot;</bucket>
              <bucket>&quot;Content Marketing Manager&quot;</bucket>
              <bucket>&quot;Java Backend Developer&quot;</bucket>
              <bucket>&quot;Software QA Tester&quot;</bucket>
              <bucket>&quot;IT Director&quot;</bucket>
              <bucket>&quot;Wealth Advisor&quot;</bucket>
              <bucket>&quot;UI/UX Developer&quot;</bucket>
              <bucket>&quot;Classroom Teacher&quot;</bucket>
              <bucket>&quot;UX Strategist&quot;</bucket>
              <bucket>&quot;Industrial Designer&quot;</bucket>
              <bucket>&quot;Financial Accountant&quot;</bucket>
              <bucket>&quot;Quality Assurance Manager&quot;</bucket>
              <bucket>&quot;Security Operations Center (SOC) Analyst&quot;</bucket>
              <bucket>&quot;Accounting Controller&quot;</bucket>
              <bucket>&quot;Competitive Intelligence Analyst&quot;</bucket>
              <bucket>&quot;Family Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Chemical Engineer&quot;</bucket>
              <bucket>&quot;Java Web Application Developer&quot;</bucket>
              <bucket>&quot;Crisis Communication Manager&quot;</bucket>
              <bucket>&quot;Brand Marketing Analyst&quot;</bucket>
              <bucket>&quot;Marketing Analytics Specialist&quot;</bucket>
              <bucket>&quot;Tax Accountant&quot;</bucket>
              <bucket>&quot;Onboarding Specialist&quot;</bucket>
              <bucket>&quot;UI/UX Front-End Developer&quot;</bucket>
              <bucket>&quot;School Psychologist&quot;</bucket>
              <bucket>&quot;Bridge Engineer&quot;</bucket>
              <bucket>&quot;Product Designer&quot;</bucket>
              <bucket>&quot;Adult Speech Therapist&quot;</bucket>
              <bucket>&quot;Financial Planner&quot;</bucket>
              <bucket>&quot;Pediatric Occupational Therapist&quot;</bucket>
              <bucket>&quot;Record Keeper&quot;</bucket>
              <bucket>&quot;Cloud Systems Engineer&quot;</bucket>
              <bucket>&quot;Surgical Physician Assistant&quot;</bucket>
              <bucket>&quot;PCB Designer&quot;</bucket>
              <bucket>&quot;Corporate Paralegal&quot;</bucket>
              <bucket>&quot;Business Systems Analyst&quot;</bucket>
              <bucket>&quot;Construction Project Manager&quot;</bucket>
              <bucket>&quot;Child Custody Lawyer&quot;</bucket>
              <bucket>&quot;IT Systems Administrator&quot;</bucket>
              <bucket>&quot;Legal Counsel&quot;</bucket>
              <bucket>&quot;Conference Manager&quot;</bucket>
              <bucket>&quot;Geriatric Physical Therapist&quot;</bucket>
              <bucket>&quot;Tax Planner&quot;</bucket>
              <bucket>&quot;Court Clerk&quot;</bucket>
              <bucket>&quot;Sales Team Leader&quot;</bucket>
              <bucket>&quot;Event Marketing Coordinator&quot;</bucket>
              <bucket>&quot;SEO Copywriter&quot;</bucket>
              <bucket>&quot;School Social Worker&quot;</bucket>
              <bucket>&quot;Brand Manager&quot;</bucket>
              <bucket>&quot;Geriatric Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Agile Product Owner&quot;</bucket>
              <bucket>&quot;Child Welfare Worker&quot;</bucket>
              <bucket>&quot;IT Business Analyst&quot;</bucket>
              <bucket>&quot;General Pediatrician&quot;</bucket>
              <bucket>&quot;Periodontal Therapist&quot;</bucket>
              <bucket>&quot;Environmental Planner&quot;</bucket>
              <bucket>&quot;Corporate Litigator&quot;</bucket>
              <bucket>&quot;Clinical Psychologist&quot;</bucket>
              <bucket>&quot;Administrative Assistant&quot;</bucket>
              <bucket>&quot;Aircraft Design Engineer&quot;</bucket>
              <bucket>&quot;Research and Development (R&amp;D) Engineer&quot;</bucket>
              <bucket>&quot;Senior Researcher&quot;</bucket>
              <bucket>&quot;Sales Trainer&quot;</bucket>
              <bucket>&quot;Analytical Chemist&quot;</bucket>
              <bucket>&quot;Accounting Manager&quot;</bucket>
              <bucket>&quot;Product Brand Manager&quot;</bucket>
              <bucket>&quot;Infrastructure Manager&quot;</bucket>
              <bucket>&quot;Systems Engineer&quot;</bucket>
              <bucket>&quot;Social Media Strategist&quot;</bucket>
              <bucket>&quot;Wedding Consultant&quot;</bucket>
              <bucket>&quot;Transportation Planner&quot;</bucket>
              <bucket>&quot;Studio Art Teacher&quot;</bucket>
              <bucket>&quot;Pediatric Surgeon&quot;</bucket>
              <bucket>&quot;Accessibility Developer&quot;</bucket>
              <bucket>&quot;Retail Sales Associate&quot;</bucket>
              <bucket>&quot;Environmental Compliance Officer&quot;</bucket>
              <bucket>&quot;E-commerce Web Designer&quot;</bucket>
              <bucket>&quot;Quality Control Manager&quot;</bucket>
              <bucket>&quot;HVAC Engineer&quot;</bucket>
              <bucket>&quot;Recruitment Coordinator&quot;</bucket>
              <bucket>&quot;Corporate Event Coordinator&quot;</bucket>
              <bucket>&quot;Network Security Specialist&quot;</bucket>
              <bucket>&quot;Digital Marketing Director&quot;</bucket>
              <bucket>&quot;Project Coordinator&quot;</bucket>
              <bucket>&quot;Environmental Impact Analyst&quot;</bucket>
              <bucket>&quot;Network Engineer&quot;</bucket>
              <bucket>&quot;Wedding Coordinator&quot;</bucket>
              <bucket>&quot;Sustainability Specialist&quot;</bucket>
              <bucket>&quot;Power Systems Engineer&quot;</bucket>
              <bucket>&quot;Digital Marketing Coordinator&quot;</bucket>
              <bucket>&quot;Purchasing Coordinator&quot;</bucket>
              <bucket>&quot;Performance Tester&quot;</bucket>
              <bucket>&quot;Instructional Designer&quot;</bucket>
              <bucket>&quot;Strategic Account Manager&quot;</bucket>
              <bucket>&quot;Database Developer&quot;</bucket>
              <bucket>&quot;Email Campaign Manager&quot;</bucket>
              <bucket>&quot;Logistics Analyst&quot;</bucket>
              <bucket>&quot;Quality Control Analyst&quot;</bucket>
              <bucket>&quot;Research Psychologist&quot;</bucket>
              <bucket>&quot;Technical Product Manager&quot;</bucket>
              <bucket>&quot;Web Designer&quot;</bucket>
              <bucket>&quot;Pediatric Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Trial Attorney&quot;</bucket>
              <bucket>&quot;Art Curator&quot;</bucket>
              <bucket>&quot;Advertising Account Executive&quot;</bucket>
              <bucket>&quot;Regional Sales Director&quot;</bucket>
              <bucket>&quot;Email Marketing Specialist&quot;</bucket>
              <bucket>&quot;Lighting Designer&quot;</bucket>
              <bucket>&quot;Procurement Specialist&quot;</bucket>
              <bucket>&quot;Backend Web Developer&quot;</bucket>
              <bucket>&quot;Help Desk Support Specialist&quot;</bucket>
              <bucket>&quot;Database Security Specialist&quot;</bucket>
              <bucket>&quot;System Administrator&quot;</bucket>
              <bucket>&quot;Help Desk Analyst&quot;</bucket>
              <bucket>&quot;Mental Health Occupational Therapist&quot;</bucket>
              <bucket>&quot;Market Research Coordinator&quot;</bucket>
              <bucket>&quot;Visual Designer&quot;</bucket>
              <bucket>&quot;Wealth Management Advisor&quot;</bucket>
              <bucket>&quot;Technical Copywriter&quot;</bucket>
              <bucket>&quot;Key Account Executive&quot;</bucket>
              <bucket>&quot;Customer Support Manager&quot;</bucket>
              <bucket>&quot;Product Demonstrator&quot;</bucket>
              <bucket>&quot;Strategic Partnerships Manager&quot;</bucket>
              <bucket>&quot;Residential Interior Designer&quot;</bucket>
              <bucket>&quot;NoSQL Database Engineer&quot;</bucket>
              <bucket>&quot;International Tax Consultant&quot;</bucket>
              <bucket>&quot;Solution Architect&quot;</bucket>
              <bucket>&quot;Charge Nurse&quot;</bucket>
              <bucket>&quot;Supplier Diversity Manager&quot;</bucket>
              <bucket>&quot;Machine Learning Engineer&quot;</bucket>
              <bucket>&quot;City Planner&quot;</bucket>
              <bucket>&quot;Orthopedic Physical Therapist&quot;</bucket>
              <bucket>&quot;Business Development Director&quot;</bucket>
              <bucket>&quot;Network Performance Analyst&quot;</bucket>
              <bucket>&quot;Litigation Paralegal&quot;</bucket>
              <bucket>&quot;Content Writer&quot;</bucket>
              <bucket>&quot;Personal Secretary&quot;</bucket>
              <bucket>&quot;Technical Writer&quot;</bucket>
              <bucket>&quot;Electronics Hardware Engineer&quot;</bucket>
              <bucket>&quot;Medical Sales Specialist&quot;</bucket>
              <bucket>&quot;Technical SEO Analyst&quot;</bucket>
              <bucket>&quot;Deliverability Analyst&quot;</bucket>
              <bucket>&quot;Subject Matter Expert&quot;</bucket>
              <bucket>&quot;Commercial Interior Designer&quot;</bucket>
              <bucket>&quot;Brand PR Specialist&quot;</bucket>
              <bucket>&quot;Systems Integration Specialist&quot;</bucket>
              <bucket>&quot;Industrial Engineer&quot;</bucket>
              <bucket>&quot;Network Support Specialist&quot;</bucket>
              <bucket>&quot;Family Counselor&quot;</bucket>
              <bucket>&quot;Exotic Animal Veterinarian&quot;</bucket>
              <bucket>&quot;Investment Portfolio Manager&quot;</bucket>
              <bucket>&quot;QA Tester&quot;</bucket>
              <bucket>&quot;Server Developer&quot;</bucket>
              <bucket>&quot;Project Architect&quot;</bucket>
              <bucket>&quot;Special Education Teacher&quot;</bucket>
              <bucket>&quot;QA Manager&quot;</bucket>
              <bucket>&quot;Pediatric Physical Therapist&quot;</bucket>
              <bucket>&quot;Construction Project Coordinator&quot;</bucket>
              <bucket>&quot;Customer Experience Strategist&quot;</bucket>
              <bucket>&quot;Brand Director&quot;</bucket>
              <bucket>&quot;B2B Sales Consultant&quot;</bucket>
              <bucket>&quot;Sales Representative&quot;</bucket>
              <bucket>&quot;Corporate Counsel&quot;</bucket>
              <bucket>&quot;Account Manager&quot;</bucket>
              <bucket>&quot;Sustainability Consultant&quot;</bucket>
              <bucket>&quot;Legal Assistant&quot;</bucket>
              <bucket>&quot;Recovery Coach&quot;</bucket>
              <bucket>&quot;Agile Project Manager&quot;</bucket>
              <bucket>&quot;Addiction Counselor&quot;</bucket>
              <bucket>&quot;Design Engineer&quot;</bucket>
              <bucket>&quot;Print Graphic Designer&quot;</bucket>
              <bucket>&quot;Human Resources Director&quot;</bucket>
              <bucket>&quot;Creative Copywriter&quot;</bucket>
              <bucket>&quot;Emergency Medicine Physician Assistant&quot;</bucket>
              <bucket>&quot;Test Automation Engineer&quot;</bucket>
              <bucket>&quot;Talent Acquisition Manager&quot;</bucket>
              <bucket>&quot;Urban Planner&quot;</bucket>
              <bucket>&quot;Data Quality Analyst&quot;</bucket>
              <bucket>&quot;Sustainable Landscape Specialist&quot;</bucket>
              <bucket>&quot;Data Engineer&quot;</bucket>
              <bucket>&quot;Sales Advisor&quot;</bucket>
              <bucket>&quot;Architectural Designer&quot;</bucket>
              <bucket>&quot;Social Science Researcher&quot;</bucket>
              <bucket>&quot;Performance Testing Specialist&quot;</bucket>
              <bucket>&quot;Speech Pathologist&quot;</bucket>
              <bucket>&quot;Community Manager&quot;</bucket>
              <bucket>&quot;Clinical Nurse Specialist&quot;</bucket>
              <bucket>&quot;Environmental Designer&quot;</bucket>
              <bucket>&quot;Transportation Engineer&quot;</bucket>
              <bucket>&quot;Wireless Network Engineer&quot;</bucket>
              <bucket>&quot;Marketing Communications Director&quot;</bucket>
              <bucket>&quot;CAD Technician&quot;</bucket>
              <bucket>&quot;SEM Analyst&quot;</bucket>
              <bucket>&quot;Risk Analyst&quot;</bucket>
              <bucket>&quot;Data Business Analyst&quot;</bucket>
              <bucket>&quot;Controls Engineer&quot;</bucket>
              <bucket>&quot;Office Coordinator&quot;</bucket>
              <bucket>&quot;Mechanical Design Engineer&quot;</bucket>
              <bucket>&quot;Big Data Engineer&quot;</bucket>
              <bucket>&quot;Full-Stack Developer&quot;</bucket>
              <bucket>&quot;Desktop Support Technician&quot;</bucket>
              <bucket>&quot;Technical Support Specialist&quot;</bucket>
              <bucket>&quot;Frontend Web Designer&quot;</bucket>
              <bucket>&quot;Technical SEO Specialist&quot;</bucket>
              <bucket>&quot;Documentation Specialist&quot;</bucket>
              <bucket>&quot;Nursing Director&quot;</bucket>
              <bucket>&quot;Acute Care Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Cloud Architect&quot;</bucket>
              <bucket>&quot;Inventory Control Specialist&quot;</bucket>
              <bucket>&quot;Construction Engineer&quot;</bucket>
              <bucket>&quot;Dental Hygiene Educator&quot;</bucket>
              <bucket>&quot;API Developer&quot;</bucket>
              <bucket>&quot;HR Coordinator&quot;</bucket>
              <bucket>&quot;Primary Care Provider&quot;</bucket>
              <bucket>&quot;Pediatric Speech Therapist&quot;</bucket>
              <bucket>&quot;Quality Control Engineer&quot;</bucket>
              <bucket>&quot;Database Analyst&quot;</bucket>
              <bucket>&quot;HR Compliance Specialist&quot;</bucket>
              <bucket>&quot;Interior Designer&quot;</bucket>
              <bucket>&quot;Healthcare Business Analyst&quot;</bucket>
              <bucket>&quot;Environmental Consultant&quot;</bucket>
              <bucket>&quot;Clinical Nurse Manager&quot;</bucket>
              <bucket>&quot;Administrative Manager&quot;</bucket>
              <bucket>&quot;Treasury Manager&quot;</bucket>
              <bucket>&quot;Finance Manager&quot;</bucket>
              <bucket>&quot;ETL Developer&quot;</bucket>
              <bucket>&quot;Research Chemist&quot;</bucket>
              <bucket>&quot;Corporate Attorney&quot;</bucket>
              <bucket>&quot;Structural Engineer&quot;</bucket>
              <bucket>&quot;User Researcher&quot;</bucket>
              <bucket>&quot;Art Education Coordinator&quot;</bucket>
              <bucket>&quot;Search Engine Marketer&quot;</bucket>
              <bucket>&quot;Procurement Coordinator&quot;</bucket>
              <bucket>&quot;Market Expansion Manager&quot;</bucket>
              <bucket>&quot;Key Account Manager&quot;</bucket>
              <bucket>&quot;Avionics Engineer&quot;</bucket>
              <bucket>&quot;Architectural Drafter&quot;</bucket>
              <bucket>&quot;HVAC Systems Designer&quot;</bucket>
              <bucket>&quot;Financial Planning Manager&quot;</bucket>
              <bucket>&quot;Automation Test Engineer&quot;</bucket>
              <bucket>&quot;Staff Nurse&quot;</bucket>
              <bucket>&quot;Commercial Landscape Architect&quot;</bucket>
              <bucket>&quot;Brand Strategist&quot;</bucket>
              <bucket>&quot;Copywriter&quot;</bucket>
              <bucket>&quot;Employee Relations Specialist&quot;</bucket>
              <bucket>&quot;Nurse Educator&quot;</bucket>
              <bucket>&quot;HR Generalist&quot;</bucket>
              <bucket>&quot;Employment Lawyer&quot;</bucket>
              <bucket>&quot;Wedding Designer&quot;</bucket>
              <bucket>&quot;Paid Advertising Specialist&quot;</bucket>
              <bucket>&quot;Budget Analyst&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{8D780B3E-64E7-4A7B-B269-8086B428251A}' />
    </worksheet>
    <worksheet name='Qualification'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualifications]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualifications]' derivation='None' name='[none:Qualifications:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' direction='DESC' measure-to-sort-by='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{1152AA28-E7C3-418B-8AF7-847EE6953CEC}' />
    </worksheet>
    <worksheet name='Salary Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column datatype='string' name='[Salary Range]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[Salary Range]' derivation='None' name='[none:Salary Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{1406E0D5-9E9E-4F49-99EA-24732086BC4B}' />
    </worksheet>
    <worksheet name='Skills'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[skills]' derivation='None' name='[none:skills:nk]' pivot='key' type='nominal' />
            <column caption='Skills' datatype='string' name='[skills]' role='dimension' type='nominal' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <manual-sort column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:skills:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Interaction design principles User behavior and psychology Wireframing and prototyping tools Animation and micro-interaction design Collaborative design processes&quot;</bucket>
              <bucket>&quot;Network management Troubleshooting Network security IT certifications (e.g., CCNA)&quot;</bucket>
              <bucket>&quot;Social media platforms (e.g., Facebook, Twitter, Instagram) Content creation and scheduling Social media analytics and insights Community engagement Paid social advertising&quot;</bucket>
              <bucket>&quot;UI design principles and best practices Graphic design tools (e.g., Adobe Photoshop, Illustrator) Typography and color theory Visual design and layout Responsive design&quot;</bucket>
              <bucket>&quot;User-centered design principles UX/UI design tools (e.g., Sketch, Adobe XD) Wireframing and prototyping Usability testing and user research Information architecture and user flows&quot;</bucket>
              <bucket>&quot;Procurement processes Vendor assessment Contract negotiation Purchase order management Spend analysis Market research Supplier relationship management Data analysis Problem-solving Attention to detail Communication skills Financial acumen&quot;</bucket>
              <bucket>&quot;Search engine algorithms and ranking factors Keyword research and analysis On-page and off-page SEO optimization SEO tools (e.g., Google Analytics, SEMrush) SEO content strategy&quot;</bucket>
              <bucket>&quot;Social media analytics tools (e.g., Google Analytics, Facebook Insights) Data analysis and reporting Social media ROI measurement Competitive analysis Trend identification&quot;</bucket>
              <bucket>&quot;Demand forecasting Inventory management Data analysis Sales and operations planning (S&amp;OP) ERP software proficiency&quot;</bucket>
              <bucket>&quot;Calendar management Travel coordination Meeting scheduling Correspondence and communication Office organization Confidentiality Time management Problem-solving Attention to detail Communication skills Technology proficiency (e.g., MS Office)&quot;</bucket>
              <bucket>&quot;Retirement planning Social security Investment products Tax planning Estate planning&quot;</bucket>
              <bucket>&quot;Office administration and management Budgeting and expense tracking Team coordination and supervision Facility management Vendor and supplier relations&quot;</bucket>
              <bucket>&quot;Proficiency in one or more backend programming languages (e.g., Java, Python, Node.js, Ruby) API development Database management (SQL or NoSQL) Server management and deployment Security best practices Knowledge of web frameworks (e.g., Express, Django)&quot;</bucket>
              <bucket>&quot;Database management systems (e.g., MySQL, Oracle, SQL Server) Data security Database tuning and optimization Backup and recovery&quot;</bucket>
              <bucket>&quot;Procurement strategies Supplier management Negotiation Cost analysis Supply chain management&quot;</bucket>
              <bucket>&quot;Customer relationship management Onboarding and training Customer feedback analysis Retention strategies Cross-selling and upselling Strong communication and empathy Customer advocacy&quot;</bucket>
              <bucket>&quot;Data analysis tools (e.g., SQL, Python) Data visualization tools (e.g., Tableau, Power BI) Statistical analysis Data cleansing and transformation Data modeling Communication of data insights Problem-solving Attention to detail Business acumen&quot;</bucket>
              <bucket>&quot;Proficiency in HTML, CSS, and JavaScript Experience with frontend frameworks like React, Angular, or Vue.js Responsive web design Cross-browser compatibility Version control (e.g., Git) Frontend performance optimization&quot;</bucket>
              <bucket>&quot;Quality assurance processes Testing methodologies (e.g., manual, automated) Bug tracking and reporting Test case development Regression testing&quot;</bucket>
              <bucket>&quot;Training program coordination Training material development Learning management systems&quot;</bucket>
              <bucket>&quot;Sales strategy and planning Account management Customer relationship management Solution selling Sales forecasting Contract negotiation Sales metrics and reporting&quot;</bucket>
              <bucket>&quot;Market research methodologies Data collection and analysis Industry knowledge&quot;</bucket>
              <bucket>&quot;Product positioning and messaging Market research and analysis Product launch planning Competitive analysis Marketing collateral creation Pricing strategies Cross-functional collaboration&quot;</bucket>
              <bucket>&quot;Client relationship management Customer service Communication skills&quot;</bucket>
              <bucket>&quot;Project management Team leadership Risk management Budgeting Communication skills&quot;</bucket>
              <bucket>&quot;Account management Sales strategy Negotiation and closing skills&quot;</bucket>
              <bucket>&quot;System administration Server maintenance Active Directory Backup and recovery Cloud computing (e.g., AWS, Azure) Troubleshooting IT security best practices Collaboration Problem-solving Attention to detail Communication skills Technical knowledge&quot;</bucket>
              <bucket>&quot;Front-end web development HTML, CSS, JavaScript Responsive design Web performance optimization Cross-browser compatibility&quot;</bucket>
              <bucket>&quot;Automation and scripting (e.g., Python, Bash) Continuous Integration/Continuous Deployment (CI/CD) Containerization (e.g., Docker, Kubernetes) Infrastructure as Code (e.g., Terraform, Ansible) Cloud platforms (e.g., AWS, Azure, GCP) Monitoring and troubleshooting skills&quot;</bucket>
              <bucket>&quot;Sustainable design principles Energy efficiency LEED certification Green building materials Environmental impact assessment&quot;</bucket>
              <bucket>&quot;Data analysis and visualization tools (e.g., Tableau, Power BI) SQL and database querying Business intelligence concepts Data modeling and reporting Strong analytical and problem-solving skills Data-driven decision-making&quot;</bucket>
              <bucket>&quot;Network security protocols Intrusion detection and prevention Security incident response Firewall administration Vulnerability assessment Security policies and procedures Log analysis Ethical hacking Problem-solving Communication skills Attention to detail&quot;</bucket>
              <bucket>&quot;Organizational and time management skills Calendar and appointment management Communication and correspondence Travel coordination Discretion and confidentiality&quot;</bucket>
              <bucket>&quot;Supply chain logistics and management Inventory control and procurement Supplier relationship management Data analysis and forecasting Risk assessment and mitigation&quot;</bucket>
              <bucket>&quot;Machine learning algorithms and libraries (e.g., scikit-learn, TensorFlow, PyTorch) Statistical analysis and modeling Data preprocessing and cleaning Big data technologies (e.g., Hadoop, Spark) Data visualization Strong programming skills (Python, R)&quot;</bucket>
              <bucket>&quot;Wedding planning Venue selection Catering and menu planning Floral and decor design Wedding etiquette&quot;</bucket>
              <bucket>&quot;Supply chain logistics Inventory management Communication skills Problem-solving Vendor coordination&quot;</bucket>
              <bucket>&quot;Sales prospecting and lead generation Sales presentation and communication CRM software (e.g., Salesforce) Sales negotiation and closing techniques Product knowledge Relationship building&quot;</bucket>
              <bucket>&quot;Manufacturing processes knowledge CAD/CAM software proficiency Lean manufacturing principles Quality control and assurance Six Sigma certification&quot;</bucket>
              <bucket>&quot;Water resources engineering Hydrology and hydraulics Environmental impact assessment Water resource modeling software Watershed management&quot;</bucket>
              <bucket>&quot;Office administration Communication skills Organizational skills Time management Microsoft Office proficiency&quot;</bucket>
              <bucket>&quot;Data entry accuracy and speed Database software (e.g., Microsoft Access, Excel) Attention to detail Time management Organization Multitasking Keyboarding skills Data verification Problem-solving Communication skills Computer proficiency&quot;</bucket>
              <bucket>&quot;Investment strategies Portfolio management Financial planning Risk assessment Regulatory compliance&quot;</bucket>
              <bucket>&quot;Event planning and coordination Budget management Vendor negotiation Venue selection and management Timeline and logistics planning Marketing and promotion Risk management Client communication Creativity Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Financial analysis Data analysis Financial modeling&quot;</bucket>
              <bucket>&quot;User experience (UX) design User interface (UI) design Wireframing and prototyping Usability testing Design tools like Sketch or Figma&quot;</bucket>
              <bucket>&quot;Customer service Problem-solving Communication skills Ticketing system usage Product knowledge&quot;</bucket>
              <bucket>&quot;Content strategy Content planning SEO optimization Content marketing Analytics&quot;</bucket>
              <bucket>&quot;Investment management Financial analysis Risk assessment Asset allocation Portfolio optimization&quot;</bucket>
              <bucket>&quot;Employee benefits administration Benefits compliance HRIS Benefits communication&quot;</bucket>
              <bucket>&quot;Event planning Vendor coordination Budget management Marketing and promotion Logistics&quot;</bucket>
              <bucket>&quot;Landscape design Plant selection and care Hardscape design&quot;</bucket>
              <bucket>&quot;Legal research Document drafting Case management E-filing Legal databases (e.g., LexisNexis) Client communication Deposition preparation Trial support Ethics and confidentiality Attention to detail Communication skills Legal software proficiency&quot;</bucket>
              <bucket>&quot;Data collection and analysis Market research tools and techniques Survey design and analysis Qualitative and quantitative research methods Report writing and presentation skills&quot;</bucket>
              <bucket>&quot;Market research methodologies Data collection and analysis Consumer behavior analysis Competitor analysis Survey design and analysis Statistical analysis software (e.g., SPSS, SAS) Data visualization Trend analysis Report writing Communication skills Attention to detail&quot;</bucket>
              <bucket>&quot;Family law Divorce proceedings Child custody Mediation Legal counseling Court representation&quot;</bucket>
              <bucket>&quot;Content creation (e.g., writing, editing, graphic design, video production) Content marketing Social media management SEO optimization Creative storytelling Audience engagement Analytics and reporting Adaptability Communication skills Creativity&quot;</bucket>
              <bucket>&quot;Test automation tools (e.g., Selenium, Appium) Scripting languages (e.g., Python, Java) Test framework development Continuous integration tools Test data management&quot;</bucket>
              <bucket>&quot;User interface (UI) design User experience (UX) design Wireframing and prototyping tools (e.g., Sketch, Figma) Usability testing Information architecture Interaction design Mobile and responsive design&quot;</bucket>
              <bucket>&quot;Inventory control Demand forecasting Supply chain management Data analysis Warehouse management&quot;</bucket>
              <bucket>&quot;Technical troubleshooting Hardware and software support Customer service Problem-solving Communication&quot;</bucket>
              <bucket>&quot;Geriatric assessment and evaluation Geriatric-specific occupational therapy techniques Aging-related conditions (e.g., dementia, arthritis) Fall prevention strategies Care coordination with healthcare teams Assistive technology for seniors Patient advocacy Empathy and compassion Communication skills&quot;</bucket>
              <bucket>&quot;Customer service Call center operations Problem-solving skills&quot;</bucket>
              <bucket>&quot;Digital marketing strategies Analytics and reporting SEO and SEM Social media marketing Email marketing Data interpretation Marketing automation tools A/B testing Communication skills Problem-solving Attention to detail Marketing knowledge&quot;</bucket>
              <bucket>&quot;Sales leadership Territory management Team management Sales data analysis Strategic planning and execution&quot;</bucket>
              <bucket>&quot;Digital marketing strategy Social media marketing Content creation SEO (Search Engine Optimization) PPC advertising Analytics and reporting&quot;</bucket>
              <bucket>&quot;Legal administrative tasks Document management Calendar and docketing Transcription File organization Communication with clients and courts Knowledge of legal terminology Attention to detail Multitasking Computer skills (e.g., MS Office)&quot;</bucket>
              <bucket>&quot;Account management Client relations Marketing strategies Campaign optimization Data analysis Communication skills&quot;</bucket>
              <bucket>&quot;Sourcing strategies Supplier evaluation Market research Cost analysis Contract negotiation&quot;</bucket>
              <bucket>&quot;Corporate event planning Corporate branding Corporate communication Audiovisual equipment Crisis management&quot;</bucket>
              <bucket>&quot;Search engine optimization Keyword research SEO tools (e.g., Google Analytics, SEMrush) On-page and off-page optimization&quot;</bucket>
              <bucket>&quot;IT systems analysis Troubleshooting IT support and documentation&quot;</bucket>
              <bucket>&quot;Counseling techniques Psychotherapy Mental health assessment Treatment planning Crisis intervention Ethical standards Empathy and active listening Cultural competence Documentation Communication skills Self-care Licensing and certification&quot;</bucket>
              <bucket>&quot;Forensic accounting Fraud detection Legal knowledge Investigative skills&quot;</bucket>
              <bucket>&quot;SEO (Search Engine Optimization) Content strategy Keyword research Content optimization Content planning Analytics and reporting&quot;</bucket>
              <bucket>&quot;SQL (Structured Query Language) Database design Query optimization Data modeling Database maintenance Problem-solving skills&quot;</bucket>
              <bucket>&quot;Business tax law knowledge Corporate tax planning Tax compliance for businesses Tax credits and incentives Tax strategy development Financial analysis IRS regulations Client relationship management Communication skills Tax software proficiency&quot;</bucket>
              <bucket>&quot;Market research and analysis Content creation and copywriting Social media management SEO and digital marketing Marketing automation tools proficiency&quot;</bucket>
              <bucket>&quot;Marketing automation platforms (e.g., Marketo, Pardot) Lead nurturing Workflow automation CRM integration Analytics and reporting Email marketing Campaign optimization Marketing strategy Communication skills Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Enterprise architecture Business strategy alignment IT governance and compliance&quot;</bucket>
              <bucket>&quot;Graphic design tools (e.g., Adobe Creative Suite) Web design principles User interface (UI) design Visual communication Typography Creativity and artistic skills&quot;</bucket>
              <bucket>&quot;Mediation Conflict resolution Negotiation Communication skills Neutrality Problem-solving Legal knowledge Mediation techniques&quot;</bucket>
              <bucket>&quot;Data architecture design Database management systems Data modeling&quot;</bucket>
              <bucket>&quot;Real estate transactions Title searches Closing processes Deed preparation Contract review Communication with real estate professionals Attention to detail Real estate terminology Technology proficiency Legal software proficiency Legal research skills&quot;</bucket>
              <bucket>&quot;Artistic skills Teaching ability Communication skills Art history knowledge Creativity&quot;</bucket>
              <bucket>&quot;Facilities management Property maintenance Space planning Budget management Health and safety compliance Vendor management&quot;</bucket>
              <bucket>&quot;Social media management Content creation Audience engagement Marketing strategy Communication skills&quot;</bucket>
              <bucket>&quot;Process optimization Manufacturing processes Lean Six Sigma methodologies Data analysis Statistical process control Quality management Root cause analysis Collaboration Problem-solving Attention to detail Technical knowledge&quot;</bucket>
              <bucket>&quot;Quality assurance Quality control Process improvement Audit procedures Compliance standards Root cause analysis&quot;</bucket>
              <bucket>&quot;Intellectual property law Trademark and patent law Copyright law IP portfolio management Litigation and dispute resolution&quot;</bucket>
              <bucket>&quot;Medical knowledge and clinical skills Patient care and assessment Communication and empathy&quot;</bucket>
              <bucket>&quot;Live chat support Online customer communication Problem resolution&quot;</bucket>
              <bucket>&quot;Electrical engineering Circuit design Electronics AutoCAD proficiency Problem-solving&quot;</bucket>
              <bucket>&quot;HTML, CSS, JavaScript Frontend frameworks (e.g., React, Angular) User experience (UX)&quot;</bucket>
              <bucket>&quot;In-house counsel Legal advisory Employment law Intellectual property Regulatory compliance Dispute resolution Contract review Client counseling&quot;</bucket>
              <bucket>&quot;Media relations Press releases Media outreach Crisis communication Public relations strategies&quot;</bucket>
              <bucket>&quot;Brand promotion Marketing knowledge Communication skills Sales techniques Product knowledge&quot;</bucket>
              <bucket>&quot;Equine veterinary medicine Horse anatomy and physiology Lameness evaluation Equine surgery Dentistry for horses Emergency equine care Equine reproductive health Compassion and empathy Client communication Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Operations management Strategic planning and execution Budgeting and financial analysis Leadership and team management Process improvement and optimization&quot;</bucket>
              <bucket>&quot;Veterinary medicine Small animal care and surgery Animal diagnostics Preventive medicine Client communication Surgical skills Radiology Anesthesia Laboratory diagnostics Compassion and empathy Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Nursing care Patient assessment Health promotion Medication administration Electronic health records (EHR)&quot;</bucket>
              <bucket>&quot;Data analysis techniques Research methodologies Data collection and interpretation Statistical analysis software (e.g., R, Python) Data visualization tools (e.g., Tableau, Power BI) Research report writing Critical thinking Problem-solving Communication skills Attention to detail&quot;</bucket>
              <bucket>&quot;Sales strategies and tactics Account management Relationship building Sales forecasting Industry and product knowledge&quot;</bucket>
              <bucket>&quot;Digital marketing strategies SEO and SEM Social media marketing Email marketing campaigns Content marketing Web analytics (e.g., Google Analytics) Marketing automation tools (e.g., HubSpot, Marketo)&quot;</bucket>
              <bucket>&quot;Dental public health principles Community outreach and education Dental health program planning Epidemiology knowledge Public health regulations knowledge&quot;</bucket>
              <bucket>&quot;Creative leadership Art direction Concept development Visual design Advertising and marketing expertise&quot;</bucket>
              <bucket>&quot;Network security protocols and technologies Firewalls and intrusion detection systems Vulnerability assessment and penetration testing Security policy development and enforcement Incident response and recovery&quot;</bucket>
              <bucket>&quot;Training and development Performance management Learning programs Employee engagement Coaching and mentoring&quot;</bucket>
              <bucket>&quot;Content strategy SEO content optimization Content marketing Keyword mapping Analytics&quot;</bucket>
              <bucket>&quot;Mobile app development languages (e.g., Java, Swift, Kotlin) Cross-platform development (e.g., React Native, Flutter) Mobile app design principles APIs and web services integration Debugging and troubleshooting&quot;</bucket>
              <bucket>&quot;JavaScript programming Frontend development Frontend frameworks (e.g., React, Angular) DOM manipulation AJAX Debugging and troubleshooting&quot;</bucket>
              <bucket>&quot;Supply chain management Inventory control Transportation logistics Vendor relations Team leadership and management&quot;</bucket>
              <bucket>&quot;Mergers and acquisitions (M&amp;A) expertise Due diligence Valuation techniques&quot;</bucket>
              <bucket>&quot;Strategic sourcing strategies Supplier evaluation and selection Negotiation skills Vendor management Cost analysis Supply chain management Contract management Problem-solving Attention to detail Communication skills Strategic thinking&quot;</bucket>
              <bucket>&quot;Security consulting Risk assessment Security audits Security policy development Penetration testing Client communication&quot;</bucket>
              <bucket>&quot;Sales prospecting and networking Face-to-face sales meetings Territory management Consultative selling Relationship building Sales tracking and reporting&quot;</bucket>
              <bucket>&quot;Project planning and scheduling Budget management Risk assessment and mitigation Stakeholder communication Agile or Waterfall methodologies&quot;</bucket>
              <bucket>&quot;Java programming Java frameworks (e.g., Spring) Object-oriented design Code debugging Software development Problem-solving skills&quot;</bucket>
              <bucket>&quot;Hospitality interior design Hotel and restaurant design Branding and theme integration FF&amp;E (furniture, fixtures, and equipment) selection Customer experience design&quot;</bucket>
              <bucket>&quot;Usability evaluation User interface assessment Usability testing tools and techniques&quot;</bucket>
              <bucket>&quot;Cybersecurity Security assessments Intrusion detection Security tools (e.g., SIEM) Incident response Vulnerability scanning&quot;</bucket>
              <bucket>&quot;Financial analysis Investment evaluation Portfolio management Data analysis&quot;</bucket>
              <bucket>&quot;Pediatric specialization Advanced pediatric care Pediatric subspecialty (e.g., pediatric cardiology, pediatric oncology) Pediatric diagnostics Pediatric treatment&quot;</bucket>
              <bucket>&quot;E-discovery tools and processes Document review and production Litigation support software (e.g., Relativity) Data analysis Case management Communication with legal teams Technical proficiency Attention to detail Problem-solving Legal research skills&quot;</bucket>
              <bucket>&quot;Tax law knowledge Individual tax planning Tax return preparation Tax deductions and credits Tax compliance IRS regulations Client relationship management Communication skills Attention to detail Tax software proficiency&quot;</bucket>
              <bucket>&quot;Sales management Sales strategy development Team leadership&quot;</bucket>
              <bucket>&quot;Content strategy Content creation Blog management Content promotion SEO Analytics and reporting&quot;</bucket>
              <bucket>&quot;Backend development RESTful APIs Database integration Java EE (Enterprise Edition) Performance optimization Version control (e.g., Git)&quot;</bucket>
              <bucket>&quot;Software quality assurance Test planning Test case design Test execution Defect tracking Test automation (e.g., Selenium)&quot;</bucket>
              <bucket>&quot;Strategic IT planning Leadership and management Budgeting and financial management IT governance and compliance Vendor management Cybersecurity and risk management Project management Cloud computing Network infrastructure Enterprise software systems&quot;</bucket>
              <bucket>&quot;Financial planning Investment knowledge Relationship management Communication skills Analytical skills&quot;</bucket>
              <bucket>&quot;User interface (UI) design User experience (UX) design Web design principles Prototyping and wireframing Front-end development languages (e.g., HTML, CSS, JavaScript) Interaction design User testing Responsive design Usability testing Collaboration Attention to detail&quot;</bucket>
              <bucket>&quot;Teaching pedagogy Classroom management Curriculum development Student assessment Differentiated instruction&quot;</bucket>
              <bucket>&quot;User experience strategy User journey mapping Design thinking&quot;</bucket>
              <bucket>&quot;Industrial design principles CAD and 3D modeling Prototyping and testing&quot;</bucket>
              <bucket>&quot;Financial reporting Accounting software (e.g., QuickBooks) Auditing GAAP knowledge&quot;</bucket>
              <bucket>&quot;Quality assurance processes and methodologies Quality metrics and KPIs Audit and compliance Team leadership and management Continuous improvement initiatives&quot;</bucket>
              <bucket>&quot;SOC operations Security incident response Threat detection Log analysis Security tools (e.g., IDS/IPS) Security alerts triage&quot;</bucket>
              <bucket>&quot;Accounting Financial reporting Financial audits Tax compliance Accounting software (e.g., SAP, Oracle) GAAP (Generally Accepted Accounting Principles)&quot;</bucket>
              <bucket>&quot;Competitive analysis Market research Data analysis Business strategy Industry knowledge&quot;</bucket>
              <bucket>&quot;Family medicine Health assessment Pediatric care Chronic disease management Patient education&quot;</bucket>
              <bucket>&quot;Chemical engineering Process design Chemical reactions Safety protocols Laboratory techniques Problem-solving skills&quot;</bucket>
              <bucket>&quot;Web application development Java web frameworks (e.g., Servlets, JSP) Frontend integration User authentication Security protocols Code documentation&quot;</bucket>
              <bucket>&quot;Crisis communication planning Crisis response Media relations Reputation management Stakeholder communication&quot;</bucket>
              <bucket>&quot;Marketing analytics Data analysis tools (e.g., Google Analytics, Adobe Analytics) Brand performance measurement Consumer behavior analysis Campaign effectiveness evaluation&quot;</bucket>
              <bucket>&quot;Marketing analytics Data analysis Data visualization Market research Google Analytics Marketing automation Reporting tools&quot;</bucket>
              <bucket>&quot;Tax preparation Tax planning Tax regulations Accounting Tax software proficiency&quot;</bucket>
              <bucket>&quot;Onboarding process management New employee orientation Training and development HR policies and procedures Employee engagement strategies&quot;</bucket>
              <bucket>&quot;UI/UX design Frontend web development Wireframing and prototyping User research Accessibility standards Responsive design Collaboration skills&quot;</bucket>
              <bucket>&quot;School psychology Special education knowledge Assessment and testing Individualized education plans Collaboration skills&quot;</bucket>
              <bucket>&quot;Bridge design Civil engineering Structural analysis AutoCAD proficiency Project management&quot;</bucket>
              <bucket>&quot;Product design principles Prototyping and wireframing User research User testing UI/UX design 3D modeling (if applicable) Collaboration Problem-solving Creativity Attention to detail Communication skills Software proficiency (e.g., Sketch, Adobe XD)&quot;</bucket>
              <bucket>&quot;Adult speech therapy Speech-language assessment Rehabilitation techniques Swallowing disorders Communication skills&quot;</bucket>
              <bucket>&quot;Financial planning Investment strategy Retirement planning Tax knowledge&quot;</bucket>
              <bucket>&quot;Pediatric assessment and evaluation Occupational therapy techniques for children Developmental milestones Sensory integration therapy Pediatric psychology Family-centered care Individualized treatment plans Communication skills Pediatric healthcare knowledge&quot;</bucket>
              <bucket>&quot;Records management Data entry and retrieval Attention to detail&quot;</bucket>
              <bucket>&quot;Cloud systems engineering Cloud infrastructure (e.g., AWS, Azure) DevOps practices Automation Security in the cloud Disaster recovery Scalability&quot;</bucket>
              <bucket>&quot;Surgical procedures and techniques Operating room protocols Anesthesia management&quot;</bucket>
              <bucket>&quot;PCB design Electronics PCB layout software proficiency Circuit design Quality control&quot;</bucket>
              <bucket>&quot;Corporate legal tasks Document drafting Compliance Corporate governance Contract management Due diligence Entity formation Communication with stakeholders Attention to detail Technology proficiency Legal software proficiency Legal research skills&quot;</bucket>
              <bucket>&quot;Business systems analysis Requirements gathering Process improvement&quot;</bucket>
              <bucket>&quot;Construction management Budgeting Contract negotiation Safety regulations&quot;</bucket>
              <bucket>&quot;Child custody law Family law Legal advocacy Negotiation Court representation Legal research Client counseling Case preparation&quot;</bucket>
              <bucket>&quot;Network administration System and server maintenance Cybersecurity knowledge Backup and recovery IT project management skills&quot;</bucket>
              <bucket>&quot;Legal counsel Legal advice Contract negotiation Legal research Litigation support Client representation Legal writing Regulatory compliance&quot;</bucket>
              <bucket>&quot;Event planning Conference logistics Budget management Vendor coordination Marketing and promotion Client relations&quot;</bucket>
              <bucket>&quot;Geriatric rehabilitation Fall prevention Elderly patient care&quot;</bucket>
              <bucket>&quot;Tax planning strategies Tax law knowledge Financial analysis Retirement planning Estate planning Client relationship management Tax optimization Communication skills Attention to detail Tax software proficiency Regulatory compliance&quot;</bucket>
              <bucket>&quot;Knowledge of court procedures Legal document management Attention to detail Computer literacy Organization skills&quot;</bucket>
              <bucket>&quot;Sales leadership Team management Sales strategy and planning&quot;</bucket>
              <bucket>&quot;Event planning and management Budgeting and financial management Vendor and sponsor relations Promotion and publicity Event logistics and coordination skills&quot;</bucket>
              <bucket>&quot;SEO (Search Engine Optimization) Keyword research SEO-friendly content On-page optimization Meta tags SEO tools (e.g., SEMrush)&quot;</bucket>
              <bucket>&quot;School social work principles Student assessment and intervention Special education laws Individualized education plans (IEPs) Crisis management Collaboration with educators Family engagement Advocacy Empathy and communication Documentation Cultural competence Licensing and certification&quot;</bucket>
              <bucket>&quot;Brand strategy development Brand identity and design Brand storytelling Marketing campaigns Brand performance measurement Creative thinking Strong communication skills&quot;</bucket>
              <bucket>&quot;Geriatric healthcare Geriatric assessment Geriatric treatment Elderly patient care Geriatric pharmacology&quot;</bucket>
              <bucket>&quot;Agile product development Scrum or Kanban frameworks Backlog management User story writing Prioritization techniques Collaboration with development teams Product vision and strategy&quot;</bucket>
              <bucket>&quot;Child welfare policies and regulations Child protective services Child development Crisis intervention Case management Cultural competence Interviewing and assessment skills Court procedures Documentation Empathy Communication skills&quot;</bucket>
              <bucket>&quot;Business process analysis Requirement gathering Data analysis Communication skills&quot;</bucket>
              <bucket>&quot;Pediatrics Pediatric care Diagnosis and treatment Pediatric medical procedures Patient care Communication skills&quot;</bucket>
              <bucket>&quot;Periodontal therapy procedures Patient care and communication Dental instrumentation Periodontal disease management Oral health education&quot;</bucket>
              <bucket>&quot;Environmental regulations Ecosystem analysis Environmental impact assessments Sustainability planning Project management&quot;</bucket>
              <bucket>&quot;Corporate law Commercial litigation Dispute resolution Contract law Legal strategy Negotiation&quot;</bucket>
              <bucket>&quot;Clinical psychology Counseling skills Assessment tools Diagnostic skills Empathy and listening skills&quot;</bucket>
              <bucket>&quot;Office management Administrative tasks Communication and organization&quot;</bucket>
              <bucket>&quot;Aerospace engineering CAD software (e.g., AutoCAD) Aerodynamics Structural analysis Aircraft systems Safety regulations&quot;</bucket>
              <bucket>&quot;Research and development processes Product innovation Prototype development Testing and experimentation Data analysis Collaboration with cross-functional teams Problem-solving Attention to detail Technical expertise Project management skills&quot;</bucket>
              <bucket>&quot;Research methodologies and data analysis Literature review and synthesis Statistical analysis software (e.g., SPSS, R) Research proposal development Strong communication and reporting skills&quot;</bucket>
              <bucket>&quot;Sales training Sales coaching Training program development Sales techniques Product knowledge Presentation skills&quot;</bucket>
              <bucket>&quot;Analytical chemistry Laboratory techniques Instrumentation Data analysis Quality control Sample preparation Scientific software (e.g., ChemDraw)&quot;</bucket>
              <bucket>&quot;Accounting principles Financial reporting Team management Budgeting Financial analysis&quot;</bucket>
              <bucket>&quot;Product branding and marketing Product lifecycle management Cross-functional team collaboration Product launch planning Market segmentation and targeting&quot;</bucket>
              <bucket>&quot;Network administration System administration Virtualization technologies (e.g., VMware, Hyper-V) Storage management IT security Disaster recovery planning Capacity planning Monitoring and troubleshooting Cloud infrastructure (e.g., AWS, Azure) Vendor management&quot;</bucket>
              <bucket>&quot;Systems engineering System architecture Integration testing Troubleshooting Technical documentation Configuration management&quot;</bucket>
              <bucket>&quot;Social media marketing strategy development Content planning and creation Social media advertising and targeting Data-driven decision-making Social media trends and platform updates&quot;</bucket>
              <bucket>&quot;Wedding planning Vendor coordination Event management&quot;</bucket>
              <bucket>&quot;Transportation planning Traffic engineering GIS proficiency Public transportation Project management&quot;</bucket>
              <bucket>&quot;Art instruction Classroom management Art techniques Lesson planning Student assessment&quot;</bucket>
              <bucket>&quot;Pediatric surgery Surgical procedures for children Operating room protocols Patient care Surgical techniques Pediatric anesthesia&quot;</bucket>
              <bucket>&quot;Web accessibility standards (e.g., WCAG) Assistive technologies Accessibility testing tools HTML and CSS for accessibility ARIA (Accessible Rich Internet Applications) User experience (UX) for accessibility Usability testing with individuals with disabilities Collaboration Attention to detail&quot;</bucket>
              <bucket>&quot;Customer service Sales techniques Product knowledge Cash handling Communication skills&quot;</bucket>
              <bucket>&quot;Environmental compliance Regulatory requirements Environmental impact assessments Reporting Environmental regulations Auditing&quot;</bucket>
              <bucket>&quot;E-commerce web design UX/UI design Shopping cart integration Payment gateway integration Mobile responsiveness E-commerce platforms (e.g., Shopify)&quot;</bucket>
              <bucket>&quot;Quality control processes and methodologies Statistical process control (SPC) Root cause analysis and corrective action Quality management systems (e.g., ISO 9001) Compliance and regulatory knowledge&quot;</bucket>
              <bucket>&quot;Knowledge of HVAC systems and equipment Mechanical engineering skills Problem-solving abilities AutoCAD proficiency HVAC design and installation expertise&quot;</bucket>
              <bucket>&quot;Recruitment process Candidate screening Applicant tracking systems Communication&quot;</bucket>
              <bucket>&quot;Corporate event planning Corporate branding and messaging Speaker and entertainment booking Audiovisual production Team coordination Crisis management Budgeting and financial management Client communication Creativity Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Network security Cybersecurity Intrusion detection Security analysis Firewall management&quot;</bucket>
              <bucket>&quot;Digital marketing strategy Marketing analytics Team leadership Content marketing SEO and SEM proficiency&quot;</bucket>
              <bucket>&quot;Project management Communication Time management Organization Problem-solving&quot;</bucket>
              <bucket>&quot;Environmental impact analysis Data collection and analysis Environmental regulations Reporting GIS (Geographic Information Systems) Technical writing&quot;</bucket>
              <bucket>&quot;Network infrastructure design Routing and switching Network protocols (e.g., TCP/IP) Cisco or Juniper certifications Troubleshooting and diagnostics Security protocols Wireless networking Network monitoring Collaboration Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Wedding planning Vendor coordination Ceremony and reception logistics Wedding etiquette Budget management Timeline planning Attention to detail Client communication Creativity Problem-solving Emotional intelligence Event design&quot;</bucket>
              <bucket>&quot;Sustainability practices Environmental management systems Green certifications&quot;</bucket>
              <bucket>&quot;Electrical engineering Power system analysis Renewable energy systems Control systems Safety regulations&quot;</bucket>
              <bucket>&quot;Digital marketing strategy development Social media advertising Email marketing Google Analytics and SEO Content management systems (CMS) proficiency&quot;</bucket>
              <bucket>&quot;Procurement Supplier management Negotiation Supply chain management Inventory control Vendor relations&quot;</bucket>
              <bucket>&quot;Performance testing methodologies Load testing tools (e.g., JMeter) Test script development Performance profiling and analysis Bottleneck identification&quot;</bucket>
              <bucket>&quot;Instructional design eLearning tools Curriculum development Multimedia design Learning theory knowledge&quot;</bucket>
              <bucket>&quot;Account management Client relationship Sales strategy Business development Negotiation skills&quot;</bucket>
              <bucket>&quot;Database design and development SQL and database querying Data modeling Programming languages (e.g., Java, Python) Data security and privacy regulations knowledge&quot;</bucket>
              <bucket>&quot;Email marketing strategies Email marketing platforms (e.g., MailChimp, HubSpot) Audience segmentation A/B testing Campaign analytics Copywriting HTML/CSS for email Marketing automation Communication skills Data analysis Attention to detail&quot;</bucket>
              <bucket>&quot;Supply chain analysis Data analytics Inventory management Transportation planning Problem-solving&quot;</bucket>
              <bucket>&quot;Quality control Quality assurance QC testing methods Compliance standards Root cause analysis Documentation Statistical analysis&quot;</bucket>
              <bucket>&quot;Research methodology Data analysis Psychological studies Writing research reports Critical thinking&quot;</bucket>
              <bucket>&quot;Product management principles Technical background Agile development methodologies Product roadmap planning Market research and analysis Stakeholder communication Problem-solving skills&quot;</bucket>
              <bucket>&quot;Web design concepts Graphic design software (e.g., Adobe Creative Suite) HTML and CSS Responsive design User interface (UI) principles Visual communication Typography Color theory Creativity Attention to detail Collaboration&quot;</bucket>
              <bucket>&quot;Pediatric healthcare Pediatric assessment Pediatric treatment Patient education Pediatric pharmacology&quot;</bucket>
              <bucket>&quot;Litigation Legal research Courtroom representation Case preparation Client counseling Legal writing&quot;</bucket>
              <bucket>&quot;Art history and knowledge Art curation and exhibition planning Collections management Art market trends Cultural awareness&quot;</bucket>
              <bucket>&quot;Advertising and marketing knowledge Client relationship management Advertising campaign development Budget management Media planning and buying&quot;</bucket>
              <bucket>&quot;Sales strategy development Territory management Sales team leadership&quot;</bucket>
              <bucket>&quot;Email marketing platforms (e.g., Mailchimp, Constant Contact) Email campaign creation and segmentation A/B testing and optimization Email deliverability and compliance Metrics tracking and analysis&quot;</bucket>
              <bucket>&quot;Lighting design Architectural lighting Lighting software proficiency Creative lighting concepts Technical knowledge&quot;</bucket>
              <bucket>&quot;Negotiation skills Vendor management Supply chain knowledge Contract management Analytical skills&quot;</bucket>
              <bucket>&quot;Server-side programming (e.g., Node.js, Python) Database management (e.g., SQL, MongoDB)&quot;</bucket>
              <bucket>&quot;Technical troubleshooting Customer service and communication Ticketing system usage Basic IT knowledge Problem-solving and critical-thinking skills&quot;</bucket>
              <bucket>&quot;Database security measures Data encryption and access control Security compliance Vulnerability assessment Database auditing and monitoring&quot;</bucket>
              <bucket>&quot;System administration Network administration Troubleshooting Security management Server maintenance Backup and recovery&quot;</bucket>
              <bucket>&quot;Help desk support Ticket resolution IT troubleshooting Customer service skills Technical knowledge Documentation and knowledge base maintenance Communication and interpersonal skills&quot;</bucket>
              <bucket>&quot;Mental health assessment and evaluation Psychotherapy techniques Cognitive-behavioral therapy (CBT) Trauma-informed care Crisis intervention Substance abuse treatment Group therapy Cultural competence Ethical standards and boundaries Active listening skills&quot;</bucket>
              <bucket>&quot;Market research coordination Survey design and administration Data analysis&quot;</bucket>
              <bucket>&quot;Graphic design Typography User interface (UI) design Adobe Creative Suite proficiency Branding and visual identity creation&quot;</bucket>
              <bucket>&quot;Wealth management strategies Asset allocation Estate planning Tax management Client relationship management&quot;</bucket>
              <bucket>&quot;Technical writing Documentation User manuals Technical specifications Industry-specific terminology Research skills&quot;</bucket>
              <bucket>&quot;Key account management Sales strategy development Negotiation and closing skills Relationship building Industry and market knowledge&quot;</bucket>
              <bucket>&quot;Customer support Team leadership Customer satisfaction Issue resolution Performance metrics Training and development&quot;</bucket>
              <bucket>&quot;Product knowledge Demonstrating skills Sales techniques Customer engagement Communication skills&quot;</bucket>
              <bucket>&quot;Partnership development Negotiation and collaboration Business development&quot;</bucket>
              <bucket>&quot;Residential interior design Space planning Color theory and selection Furniture and materials selection 3D modeling and rendering&quot;</bucket>
              <bucket>&quot;NoSQL databases (e.g., MongoDB, Cassandra) Data modeling Data migration Performance tuning Scalability Distributed systems&quot;</bucket>
              <bucket>&quot;International tax law knowledge Transfer pricing Cross-border tax planning Tax treaties and agreements Foreign tax credits International tax compliance Transfer pricing documentation Multinational tax strategies Client relationship management Communication skills Tax software proficiency&quot;</bucket>
              <bucket>&quot;Solution design Technical architecture Cloud computing and software development knowledge&quot;</bucket>
              <bucket>&quot;Nursing leadership Charge nurse responsibilities Team coordination&quot;</bucket>
              <bucket>&quot;Supplier diversity programs Diversity and inclusion initiatives Supplier assessment and certification Data collection and reporting Vendor outreach and engagement Strategic planning Communication skills Relationship building Attention to diversity and inclusion principles&quot;</bucket>
              <bucket>&quot;Machine learning algorithms Python programming Data preprocessing Deep learning Model evaluation&quot;</bucket>
              <bucket>&quot;Urban planning Zoning regulations Environmental planning GIS proficiency Community engagement&quot;</bucket>
              <bucket>&quot;Orthopedic assessment and treatment Rehabilitation exercises Patient education&quot;</bucket>
              <bucket>&quot;Business development Sales strategy Market analysis Client acquisition Team leadership Strategic planning Presentation skills&quot;</bucket>
              <bucket>&quot;Network performance analysis Network monitoring tools (e.g., Wireshark) Troubleshooting Capacity planning Data analysis Network protocols&quot;</bucket>
              <bucket>&quot;Legal research Discovery management Case preparation Trial support Document review Client communication E-filing Attention to detail Multitasking Legal terminology Technology proficiency Communication skills Legal software proficiency&quot;</bucket>
              <bucket>&quot;Writing skills Content creation SEO knowledge Research skills Grammar and proofreading&quot;</bucket>
              <bucket>&quot;Administrative support Calendar management Communication skills Time management Organizational skills Confidentiality&quot;</bucket>
              <bucket>&quot;Technical documentation Technical knowledge Writing skills Editing User manuals&quot;</bucket>
              <bucket>&quot;Electronics design PCB layout Embedded systems Circuit analysis Troubleshooting&quot;</bucket>
              <bucket>&quot;Medical product knowledge Understanding of healthcare regulations Relationship building with healthcare professionals Sales forecasting and planning Medical sales techniques&quot;</bucket>
              <bucket>&quot;Technical SEO Website audits SEO tools (e.g., Screaming Frog, Ahrefs) Schema markup Site speed optimization XML sitemaps Canonicalization&quot;</bucket>
              <bucket>&quot;Email deliverability best practices Spam filter testing List hygiene Blacklist monitoring Email authentication (e.g., SPF, DKIM) Deliverability metrics analysis Troubleshooting deliverability issues Communication skills Data analysis Attention to detail&quot;</bucket>
              <bucket>&quot;Expertise in a specific subject area Knowledge of curriculum standards Instructional design Assessment development Educational technology proficiency&quot;</bucket>
              <bucket>&quot;Commercial interior design Workplace ergonomics Building codes and regulations knowledge Sustainable design principles AutoCAD and Revit proficiency&quot;</bucket>
              <bucket>&quot;Brand management Public relations Brand storytelling Influencer marketing Media monitoring&quot;</bucket>
              <bucket>&quot;Systems integration Integration architecture Data mapping Middleware technologies API integration System testing Troubleshooting&quot;</bucket>
              <bucket>&quot;Industrial engineering Process optimization Lean manufacturing Quality control Data analysis Workflow design&quot;</bucket>
              <bucket>&quot;Network troubleshooting IT support Network configuration Technical knowledge Problem-solving&quot;</bucket>
              <bucket>&quot;Family counseling Marriage and family therapy Conflict resolution skills&quot;</bucket>
              <bucket>&quot;Exotic animal medicine Exotic animal diagnostics Specialized surgical skills Avian medicine Reptile care Amphibian care Exotic animal anesthesia Compassion and empathy Client communication Problem-solving Attention to detail&quot;</bucket>
              <bucket>&quot;Investment analysis Portfolio management Risk assessment&quot;</bucket>
              <bucket>&quot;Test planning and strategy Test case design and execution Defect reporting and tracking Test automation tools (e.g., Selenium, Appium) Regression testing&quot;</bucket>
              <bucket>&quot;Server-side programming languages (e.g., Java, Python) Database management API development&quot;</bucket>
              <bucket>&quot;Architectural project management Construction documents Building systems Design coordination Client communication&quot;</bucket>
              <bucket>&quot;Special education strategies Individualized education plans (IEPs) Behavior management techniques Collaboration with support staff Special education laws and regulations knowledge&quot;</bucket>
              <bucket>&quot;Quality assurance Process improvement Team leadership Problem-solving Quality control&quot;</bucket>
              <bucket>&quot;Pediatric rehabilitation Developmental assessments Child psychology knowledge&quot;</bucket>
              <bucket>&quot;Construction project management Building codes and regulations knowledge Budgeting and cost control Construction scheduling Contractor and subcontractor coordination&quot;</bucket>
              <bucket>&quot;Customer experience strategy Customer journey mapping Feedback analysis User research Metrics and KPIs Communication skills&quot;</bucket>
              <bucket>&quot;Brand strategy Brand development Creative direction Brand management Market research&quot;</bucket>
              <bucket>&quot;B2B sales Business-to-business sales strategies Lead generation Sales negotiations Client relationship building Market research&quot;</bucket>
              <bucket>&quot;Sales techniques and strategies Relationship building CRM software usage Product knowledge Negotiation and closing skills&quot;</bucket>
              <bucket>&quot;Corporate law Compliance Mergers and acquisitions Corporate governance Contract drafting Risk management Legal strategy Due diligence&quot;</bucket>
              <bucket>&quot;Account management Customer relationship management Sales and negotiation Business development Client needs analysis&quot;</bucket>
              <bucket>&quot;Sustainability consulting Sustainability assessments Sustainable practices Green building standards Environmental policies Client communication&quot;</bucket>
              <bucket>&quot;Legal research Document drafting Communication skills Legal software proficiency Attention to detail&quot;</bucket>
              <bucket>&quot;Addiction recovery support Motivational interviewing Relapse prevention strategies&quot;</bucket>
              <bucket>&quot;Agile methodologies Scrum or Kanban Team collaboration Agile tools (e.g., Jira)&quot;</bucket>
              <bucket>&quot;Addiction counseling techniques Substance abuse treatment Counseling ethics&quot;</bucket>
              <bucket>&quot;Engineering design CAD software proficiency Problem-solving Technical knowledge Communication skills&quot;</bucket>
              <bucket>&quot;Print design software (e.g., Adobe InDesign, Illustrator) Layout and composition Print production processes Color theory and management Attention to detail Print industry knowledge&quot;</bucket>
              <bucket>&quot;Strategic HR planning Employee relations Talent management HR policy development Leadership skills&quot;</bucket>
              <bucket>&quot;Creative writing Copywriting Advertising copy Content creation Brand storytelling Marketing campaigns Proofreading and editing&quot;</bucket>
              <bucket>&quot;Emergency medical care Triage and assessment Trauma management&quot;</bucket>
              <bucket>&quot;Test automation frameworks and tools Scripting and programming languages (e.g., Python, Java) Continuous integration and continuous testing (CI/CT) Test script development and maintenance Test environment setup and management&quot;</bucket>
              <bucket>&quot;Talent sourcing Interviewing Onboarding Recruitment strategies HR software&quot;</bucket>
              <bucket>&quot;Urban design and planning Zoning regulations GIS and mapping tools&quot;</bucket>
              <bucket>&quot;Data quality assessment and improvement Data profiling and validation Knowledge of data quality tools (e.g., Informatica, Talend) Data governance principles SQL for data analysis Attention to detail and data accuracy&quot;</bucket>
              <bucket>&quot;Sustainable landscape design Native plant selection Water conservation Soil health Green building practices LEED certification&quot;</bucket>
              <bucket>&quot;Data integration ETL (Extract, Transform, Load) Big data technologies (e.g., Hadoop, Spark) Database management Data warehousing&quot;</bucket>
              <bucket>&quot;Sales strategies Customer relationship management Sales techniques Product knowledge Client acquisition Negotiation skills&quot;</bucket>
              <bucket>&quot;Architectural design software (e.g., AutoCAD, Revit) Building codes and regulations 3D modeling Visualization Sustainable design&quot;</bucket>
              <bucket>&quot;Social science research methods Qualitative and quantitative data analysis Survey design and implementation Ethnographic research Interviewing skills Research ethics Statistical software (e.g., Stata, NVivo) Report writing Communication skills Critical thinking Empathy&quot;</bucket>
              <bucket>&quot;Performance testing Load testing Stress testing Test scenarios Performance monitoring Benchmarking Performance analysis&quot;</bucket>
              <bucket>&quot;Speech pathology Articulation therapy Language disorders Speech assessment Therapy planning Communication skills&quot;</bucket>
              <bucket>&quot;Community engagement and moderation Online community-building strategies Content curation and creation Crisis management and conflict resolution Analytics and reporting&quot;</bucket>
              <bucket>&quot;Clinical nursing specialization (e.g., critical care, oncology) Advanced nursing skills Patient education&quot;</bucket>
              <bucket>&quot;Environmental design principles Sustainability concepts CAD and design software&quot;</bucket>
              <bucket>&quot;Transportation engineering Traffic analysis and planning Civil engineering software (e.g., MicroStation, AutoCAD Civil 3D) Roadway design Public transportation knowledge&quot;</bucket>
              <bucket>&quot;Wireless network design and architecture Wi-Fi standards and protocols RF (Radio Frequency) planning and optimization Wireless security protocols Troubleshooting wireless network issues&quot;</bucket>
              <bucket>&quot;Marketing communication Public relations Content strategy Crisis management Media relations&quot;</bucket>
              <bucket>&quot;Computer-aided design (CAD) software Technical drawing Blueprint interpretation Drafting standards Engineering principles Collaboration with engineers Problem-solving Attention to detail Communication skills 3D modeling (if applicable)&quot;</bucket>
              <bucket>&quot;Search engine marketing (SEM) Google Ads Bing Ads Keyword analysis Ad performance analysis SEM strategy development Bid management&quot;</bucket>
              <bucket>&quot;Risk assessment Data analysis Financial modeling Risk management tools Regulatory compliance knowledge&quot;</bucket>
              <bucket>&quot;Data analysis Data modeling Data visualization SQL Data tools (e.g., Tableau)&quot;</bucket>
              <bucket>&quot;Control system design PLC programming Automation Instrumentation System integration&quot;</bucket>
              <bucket>&quot;Office administration Calendar management Reception duties Communication skills Record keeping Office supplies management&quot;</bucket>
              <bucket>&quot;Mechanical engineering CAD software (e.g., SolidWorks, AutoCAD) Finite element analysis Product development Prototyping&quot;</bucket>
              <bucket>&quot;Big data technologies (Hadoop, Spark, etc.) Data processing and analysis Distributed computing&quot;</bucket>
              <bucket>&quot;Frontend and backend development Database integration Problem-solving API knowledge&quot;</bucket>
              <bucket>&quot;Desktop hardware and software troubleshooting Operating system expertise (e.g., Windows, macOS) Remote desktop support Hardware and software upgrades Customer service skills&quot;</bucket>
              <bucket>&quot;Technical troubleshooting Customer support tools (e.g., Zendesk, Freshdesk) Communication skills Problem-solving and critical thinking Ticket management Knowledge base creation&quot;</bucket>
              <bucket>&quot;Frontend web development HTML/CSS Responsive design User interface (UI) design Adobe Creative Suite Collaboration skills&quot;</bucket>
              <bucket>&quot;Technical SEO audits Website crawl analysis Schema markup XML sitemaps Canonicalization&quot;</bucket>
              <bucket>&quot;Document management Recordkeeping Attention to detail Data entry Organizational skills&quot;</bucket>
              <bucket>&quot;Nursing management Patient care coordination Staff supervision Compliance with healthcare regulations Quality improvement Leadership skills&quot;</bucket>
              <bucket>&quot;Acute care nursing Emergency medicine Critical care Diagnostic tests Treatment planning&quot;</bucket>
              <bucket>&quot;Cloud computing platforms (AWS, Azure, etc.) Cloud security Containerization (Docker, Kubernetes)&quot;</bucket>
              <bucket>&quot;Inventory management Stock control Demand forecasting Inventory tracking systems Supply chain coordination Problem-solving skills&quot;</bucket>
              <bucket>&quot;Construction management Structural design AutoCAD proficiency Project management Site inspection&quot;</bucket>
              <bucket>&quot;Dental hygiene knowledge Teaching and instructional skills Curriculum development Student assessment Clinical practice experience&quot;</bucket>
              <bucket>&quot;API design and development RESTful API knowledge Security protocols (OAuth, JWT)&quot;</bucket>
              <bucket>&quot;Human resources Recruitment Employee onboarding HRIS (HR Information Systems) Record keeping Communication skills&quot;</bucket>
              <bucket>&quot;Medical diagnosis Patient care Medical record-keeping Communication skills Empathy and compassion&quot;</bucket>
              <bucket>&quot;Pediatric speech therapy Speech-language assessment Individualized treatment plans Child development Communication skills&quot;</bucket>
              <bucket>&quot;Quality control processes Quality assurance standards (e.g., ISO) Statistical analysis Inspection techniques Documenting quality issues Root cause analysis Communication with production teams Problem-solving Attention to detail Technical knowledge&quot;</bucket>
              <bucket>&quot;Data analysis Database querying and reporting Data visualization SQL proficiency Data quality assurance&quot;</bucket>
              <bucket>&quot;Employment law knowledge Compliance management Auditing skills Employee relations Communication skills&quot;</bucket>
              <bucket>&quot;Interior design Space planning Color theory Material selection CAD software (e.g., SketchUp) Client collaboration Budget management&quot;</bucket>
              <bucket>&quot;Healthcare industry knowledge Health data analysis HIPAA regulations EMR systems&quot;</bucket>
              <bucket>&quot;Environmental assessments Regulatory compliance Environmental impact analysis&quot;</bucket>
              <bucket>&quot;Clinical nursing Patient assessment Care planning Staff development Healthcare protocols Communication skills Problem-solving abilities&quot;</bucket>
              <bucket>&quot;Administrative leadership Office management Staff supervision Budgeting and financial management Process improvement Communication skills&quot;</bucket>
              <bucket>&quot;Treasury management Cash flow analysis Risk management Financial forecasting Banking relations&quot;</bucket>
              <bucket>&quot;Financial management Budgeting Financial analysis Financial reporting Risk management Financial software (e.g., Excel, QuickBooks) Strategic planning&quot;</bucket>
              <bucket>&quot;ETL (Extract, Transform, Load) processes Data integration SQL and scripting languages&quot;</bucket>
              <bucket>&quot;Research chemistry Experimental design Data interpretation Chemical synthesis Research protocols Scientific writing Problem-solving skills&quot;</bucket>
              <bucket>&quot;Corporate law and regulations Contract drafting and negotiation Legal research and analysis Risk management Excellent communication and negotiation skills&quot;</bucket>
              <bucket>&quot;Structural engineering principles Structural analysis and design software (e.g., AutoCAD, SAP2000) Building codes and standards Project management Structural integrity assessment&quot;</bucket>
              <bucket>&quot;User research methods Usability testing Data analysis and interpretation&quot;</bucket>
              <bucket>&quot;Art education curriculum Program development Teacher training Communication skills Artistic expertise&quot;</bucket>
              <bucket>&quot;Search engine marketing PPC advertising SEO strategy Data analysis Digital marketing skills&quot;</bucket>
              <bucket>&quot;Procurement processes Purchase order management Vendor communication Data analysis Inventory control&quot;</bucket>
              <bucket>&quot;Market expansion strategies Market research Sales planning and execution&quot;</bucket>
              <bucket>&quot;Key account management Relationship building Sales negotiation&quot;</bucket>
              <bucket>&quot;Avionics systems Electronic warfare systems Radar systems Aircraft communication systems System integration Testing and validation&quot;</bucket>
              <bucket>&quot;Architectural drafting AutoCAD 2D and 3D modeling Blueprint reading Building codes Collaboration with architects Detail-oriented&quot;</bucket>
              <bucket>&quot;HVAC system design Load calculations Energy efficiency AutoCAD or similar software Mechanical engineering principles Collaboration with architects and engineers Regulatory compliance Problem-solving Attention to detail Communication skills&quot;</bucket>
              <bucket>&quot;Financial planning Investment strategies Team leadership Wealth management Client advisory skills&quot;</bucket>
              <bucket>&quot;Test automation Test framework development Continuous integration Scripting languages (e.g., Python) Test reporting Code review&quot;</bucket>
              <bucket>&quot;Nursing care Patient assessment Medical knowledge&quot;</bucket>
              <bucket>&quot;Landscape architecture Site planning Plant selection Environmental sustainability AutoCAD Project management&quot;</bucket>
              <bucket>&quot;Brand strategy development Market research and analysis Competitive analysis Brand positioning and messaging Creative direction and collaboration&quot;</bucket>
              <bucket>&quot;Copywriting Content creation SEO Marketing strategies Creativity&quot;</bucket>
              <bucket>&quot;Employee conflict resolution HR compliance Employee engagement Communication skills&quot;</bucket>
              <bucket>&quot;Nursing education Curriculum development Clinical instruction Assessment and evaluation Educational technology Communication skills&quot;</bucket>
              <bucket>&quot;HR policies and procedures Employee relations Recruitment Communication skills&quot;</bucket>
              <bucket>&quot;Employment law and regulations Employment contracts and agreements Workplace discrimination and harassment laws Legal compliance Client representation and advocacy&quot;</bucket>
              <bucket>&quot;Wedding design concepts Decor selection and arrangement Creative flair&quot;</bucket>
              <bucket>&quot;Google Ads management PPC campaign optimization Keyword research Ad copywriting A/B testing Conversion tracking&quot;</bucket>
              <bucket>&quot;Budget planning Financial forecasting Excel proficiency Data analysis&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' direction='DESC' measure-to-sort-by='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:skills:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{A9BEE0D0-9212-42FE-9216-F1B619A5E0A7}' />
    </worksheet>
    <worksheet name='Task 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Job Id]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Job Posting Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column datatype='string' name='[Work Type]' role='dimension' type='nominal' />
            <column-instance column='[Job Id]' derivation='CountD' name='[ctd:Job Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='None' name='[none:Company Size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[Work Type]' derivation='None' name='[none:Work Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Posting Date]' derivation='Year' name='[yr:Job Posting Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company Size:qk]' included-values='in-range'>
            <min>12646</min>
            <max>134834</max>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]'>
            <groupfilter function='member' level='[none:Job Title:nk]' member='&quot;Account Director&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]'>
            <groupfilter function='member' level='[none:Work Type:nk]' member='&quot;Intern&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[yr:Job Posting Date:ok]'>
            <groupfilter function='member' level='[yr:Job Posting Date:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[yr:Job Posting Date:ok]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company Size:qk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[ctd:Job Id:qk]</cols>
      </table>
      <simple-id uuid='{59773029-6966-43E8-9897-8B472EA0E046}' />
    </worksheet>
    <worksheet name='Task 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Job Id]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Preference]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualifications]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column-instance column='[Company Size]' derivation='Avg' name='[avg:Company Size:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Preference]' derivation='None' name='[none:Preference:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualifications]' derivation='None' name='[none:Qualifications:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Job Id])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Alumina Limited&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;AutoNation&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Avast&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Bank of New York Mellon&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Berkeley Group Holdings&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Berkshire Hathaway&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;BlackRock&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Caesars Entertainment&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Chevron&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;China Southern Airlines&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;CommScope Holding&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;CRRC Corporation&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Devon Energy&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;DISH Network&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;EnLink Midstream&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Escorts Limited&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Everbright Securities&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Farmers Insurance Exchange&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Fortescue Metals Group&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Freeport-McMoRan&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;GlaxoSmithKline&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Great Wall Motors&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Harley-Davidson, Inc.&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Hartford Financial Services Group&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Indiabulls Housing Finance&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Keurig Dr Pepper Inc.&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kinder Morgan&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Kroger&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lendlease Group&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Lennar&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Maruti Suzuki India&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Meta Platforms&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;MetLife&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Micron Technology&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;ON Semiconductor&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Prudential plc&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Qube Holdings&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Reliance Industries Limited&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Renishaw&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Santos Limited&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Siemens AG&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;State Farm Insurance&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Tata Steel&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Toll Brothers&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;United Breweries (UB)&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;United Natural Foods&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;United States Steel&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Univar Solutions&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Wyndham Hotels &amp; Resorts, Inc.&quot;' />
                  <groupfilter function='member' level='[none:Company:nk]' member='&quot;Xiaomi Corporation&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]'>
            <groupfilter function='member' level='[none:Job Title:nk]' member='&quot;Data Scientist&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]'>
            <groupfilter function='member' level='[none:Preference:nk]' member='&quot;Female&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]'>
            <groupfilter function='member' level='[none:Qualifications:nk]' member='&quot;B.Tech&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]'>
            <groupfilter function='member' level='[none:Role:nk]' member='&quot;Data Engineer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#9d7660' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk]</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{345234FD-9158-4972-881E-4BE6E90D8DA2}' />
    </worksheet>
    <worksheet name='Task 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Experience]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Portal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Preference]' role='dimension' type='nominal' />
            <column datatype='string' name='[Salary Range]' role='dimension' type='nominal' />
            <column datatype='string' name='[Work Type]' role='dimension' type='nominal' />
            <column-instance column='[Company Size]' derivation='Avg' name='[avg:Company Size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Experience]' derivation='None' name='[none:Experience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Portal]' derivation='None' name='[none:Job Portal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Preference]' derivation='None' name='[none:Preference:nk]' pivot='key' type='nominal' />
            <column-instance column='[Salary Range]' derivation='None' name='[none:Salary Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Work Type]' derivation='None' name='[none:Work Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]' included-values='in-range'>
            <max>49964.0</max>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyz Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lao PDR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UAE&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 10 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 11 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 12 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 13 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 14 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 15 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 8 Years&quot;' />
              <groupfilter function='member' level='[none:Experience:nk]' member='&quot;5 to 9 Years&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Portal:nk]'>
            <groupfilter function='member' level='[none:Job Portal:nk]' member='&quot;Idealist&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]'>
            <groupfilter function='member' level='[none:Job Title:nk]' member='&quot;Mechanical Engineer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]'>
            <groupfilter function='member' level='[none:Preference:nk]' member='&quot;Male&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$55K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$56K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$57K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$58K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$59K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$60K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$61K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$62K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$63K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$64K-$99K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$100K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$101K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$102K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$103K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$104K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$105K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$106K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$107K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$108K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$109K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$110K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$111K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$112K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$113K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$114K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$115K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$116K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$117K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$118K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$119K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$120K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$121K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$122K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$123K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$124K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$125K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$126K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$127K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$128K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$129K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$130K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$80K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$81K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$82K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$83K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$84K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$85K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$86K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$87K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$88K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$89K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$90K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$91K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$92K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$93K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$94K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$95K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$96K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$97K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$98K&quot;' />
              <groupfilter function='member' level='[none:Salary Range:nk]' member='&quot;$65K-$99K&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Work Type:nk]' member='&quot;Full-Time&quot;' />
              <groupfilter function='member' level='[none:Work Type:nk]' member='&quot;Part-Time&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Portal:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company:nk]</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{B4B1BA98-5CD7-4BA7-82A0-0117FF7176FC}' />
    </worksheet>
    <worksheet name='Work type'>
      <table>
        <view>
          <datasources>
            <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
          </datasources>
          <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
            <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Role]' role='dimension' type='nominal' />
            <column datatype='string' name='[Work Type]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
            <column-instance column='[Work Type]' derivation='None' name='[none:Work Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic Of Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Martin (French part)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Interaction Designer&quot;</bucket>
              <bucket>&quot;Network Administrator&quot;</bucket>
              <bucket>&quot;Social Media Manager&quot;</bucket>
              <bucket>&quot;User Interface Designer&quot;</bucket>
              <bucket>&quot;User Experience Designer&quot;</bucket>
              <bucket>&quot;Procurement Analyst&quot;</bucket>
              <bucket>&quot;SEO Specialist&quot;</bucket>
              <bucket>&quot;Social Media Analyst&quot;</bucket>
              <bucket>&quot;Demand Planner&quot;</bucket>
              <bucket>&quot;Executive Assistant&quot;</bucket>
              <bucket>&quot;Retirement Planner&quot;</bucket>
              <bucket>&quot;Office Manager&quot;</bucket>
              <bucket>&quot;Backend Developer&quot;</bucket>
              <bucket>&quot;Database Administrator&quot;</bucket>
              <bucket>&quot;Procurement Manager&quot;</bucket>
              <bucket>&quot;Customer Success Manager&quot;</bucket>
              <bucket>&quot;Data Analyst&quot;</bucket>
              <bucket>&quot;Frontend Developer&quot;</bucket>
              <bucket>&quot;Quality Assurance Analyst&quot;</bucket>
              <bucket>&quot;Training Coordinator&quot;</bucket>
              <bucket>&quot;Account Executive&quot;</bucket>
              <bucket>&quot;Market Researcher&quot;</bucket>
              <bucket>&quot;Product Marketing Manager&quot;</bucket>
              <bucket>&quot;Client Relationship Manager&quot;</bucket>
              <bucket>&quot;IT Project Manager&quot;</bucket>
              <bucket>&quot;Sales Account Manager&quot;</bucket>
              <bucket>&quot;Systems Administrator&quot;</bucket>
              <bucket>&quot;Front-End Developer&quot;</bucket>
              <bucket>&quot;DevOps Engineer&quot;</bucket>
              <bucket>&quot;Sustainable Design Specialist&quot;</bucket>
              <bucket>&quot;Business Intelligence Analyst&quot;</bucket>
              <bucket>&quot;Network Security Analyst&quot;</bucket>
              <bucket>&quot;Personal Assistant&quot;</bucket>
              <bucket>&quot;Supply Chain Manager&quot;</bucket>
              <bucket>&quot;Data Scientist&quot;</bucket>
              <bucket>&quot;Wedding Planner&quot;</bucket>
              <bucket>&quot;Supply Chain Coordinator&quot;</bucket>
              <bucket>&quot;Inside Sales Representative&quot;</bucket>
              <bucket>&quot;Manufacturing Engineer&quot;</bucket>
              <bucket>&quot;Water Resources Engineer&quot;</bucket>
              <bucket>&quot;Administrative Coordinator&quot;</bucket>
              <bucket>&quot;Data Entry Specialist&quot;</bucket>
              <bucket>&quot;Investment Advisor&quot;</bucket>
              <bucket>&quot;Event Planner&quot;</bucket>
              <bucket>&quot;Financial Analyst&quot;</bucket>
              <bucket>&quot;UX/UI Designer&quot;</bucket>
              <bucket>&quot;Customer Support Specialist&quot;</bucket>
              <bucket>&quot;Content Strategist&quot;</bucket>
              <bucket>&quot;Portfolio Manager&quot;</bucket>
              <bucket>&quot;Benefits Coordinator&quot;</bucket>
              <bucket>&quot;Event Coordinator&quot;</bucket>
              <bucket>&quot;Residential Landscape Designer&quot;</bucket>
              <bucket>&quot;Paralegal&quot;</bucket>
              <bucket>&quot;Research Analyst&quot;</bucket>
              <bucket>&quot;Market Research Analyst&quot;</bucket>
              <bucket>&quot;Family Law Attorney&quot;</bucket>
              <bucket>&quot;Content Creator&quot;</bucket>
              <bucket>&quot;Automation Tester&quot;</bucket>
              <bucket>&quot;UI/UX Designer&quot;</bucket>
              <bucket>&quot;Inventory Manager&quot;</bucket>
              <bucket>&quot;IT Support Specialist&quot;</bucket>
              <bucket>&quot;Geriatric Occupational Therapist&quot;</bucket>
              <bucket>&quot;Call Center Agent&quot;</bucket>
              <bucket>&quot;Digital Marketing Analyst&quot;</bucket>
              <bucket>&quot;Territory Sales Manager&quot;</bucket>
              <bucket>&quot;Digital Marketing Specialist&quot;</bucket>
              <bucket>&quot;Legal Secretary&quot;</bucket>
              <bucket>&quot;Account Strategist&quot;</bucket>
              <bucket>&quot;Sourcing Analyst&quot;</bucket>
              <bucket>&quot;Corporate Event Planner&quot;</bucket>
              <bucket>&quot;SEO Analyst&quot;</bucket>
              <bucket>&quot;IT Analyst&quot;</bucket>
              <bucket>&quot;Mental Health Counselor&quot;</bucket>
              <bucket>&quot;Forensic Accountant&quot;</bucket>
              <bucket>&quot;SEO Content Strategist&quot;</bucket>
              <bucket>&quot;SQL Database Developer&quot;</bucket>
              <bucket>&quot;Business Tax Consultant&quot;</bucket>
              <bucket>&quot;Marketing Specialist&quot;</bucket>
              <bucket>&quot;Marketing Automation Specialist&quot;</bucket>
              <bucket>&quot;Enterprise Architect&quot;</bucket>
              <bucket>&quot;Web Graphic Designer&quot;</bucket>
              <bucket>&quot;Mediator&quot;</bucket>
              <bucket>&quot;Data Architect&quot;</bucket>
              <bucket>&quot;Real Estate Paralegal&quot;</bucket>
              <bucket>&quot;Fine Arts Instructor&quot;</bucket>
              <bucket>&quot;Facilities Manager&quot;</bucket>
              <bucket>&quot;Social Media Influencer&quot;</bucket>
              <bucket>&quot;Process Engineer&quot;</bucket>
              <bucket>&quot;Service Quality Assurance Manager&quot;</bucket>
              <bucket>&quot;Intellectual Property Lawyer&quot;</bucket>
              <bucket>&quot;Primary Care Physician Assistant&quot;</bucket>
              <bucket>&quot;Live Chat Support Agent&quot;</bucket>
              <bucket>&quot;Electrical Engineer&quot;</bucket>
              <bucket>&quot;Frontend Web Developer&quot;</bucket>
              <bucket>&quot;In-House Counsel&quot;</bucket>
              <bucket>&quot;Media Relations Specialist&quot;</bucket>
              <bucket>&quot;Brand Promoter&quot;</bucket>
              <bucket>&quot;Equine Veterinarian&quot;</bucket>
              <bucket>&quot;Operations Director&quot;</bucket>
              <bucket>&quot;Small Animal Veterinarian&quot;</bucket>
              <bucket>&quot;Primary Care Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Data Analyst Researcher&quot;</bucket>
              <bucket>&quot;Sales Account Executive&quot;</bucket>
              <bucket>&quot;Digital Marketing Manager&quot;</bucket>
              <bucket>&quot;Dental Public Health Hygienist&quot;</bucket>
              <bucket>&quot;Creative Director&quot;</bucket>
              <bucket>&quot;Network Security Engineer&quot;</bucket>
              <bucket>&quot;Employee Development Manager&quot;</bucket>
              <bucket>&quot;Content SEO Strategist&quot;</bucket>
              <bucket>&quot;Mobile App Developer&quot;</bucket>
              <bucket>&quot;JavaScript Developer&quot;</bucket>
              <bucket>&quot;Logistics Manager&quot;</bucket>
              <bucket>&quot;Mergers and Acquisitions Advisor&quot;</bucket>
              <bucket>&quot;Strategic Sourcing Manager&quot;</bucket>
              <bucket>&quot;Security Consultant&quot;</bucket>
              <bucket>&quot;Outside Sales Representative&quot;</bucket>
              <bucket>&quot;Project Manager&quot;</bucket>
              <bucket>&quot;Java Software Engineer&quot;</bucket>
              <bucket>&quot;Hospitality Interior Designer&quot;</bucket>
              <bucket>&quot;Usability Analyst&quot;</bucket>
              <bucket>&quot;Cybersecurity Analyst&quot;</bucket>
              <bucket>&quot;Investment Analyst&quot;</bucket>
              <bucket>&quot;Pediatric Specialist&quot;</bucket>
              <bucket>&quot;Litigation Support Specialist&quot;</bucket>
              <bucket>&quot;Personal Tax Consultant&quot;</bucket>
              <bucket>&quot;Sales Manager&quot;</bucket>
              <bucket>&quot;Content Marketing Manager&quot;</bucket>
              <bucket>&quot;Java Backend Developer&quot;</bucket>
              <bucket>&quot;Software QA Tester&quot;</bucket>
              <bucket>&quot;IT Director&quot;</bucket>
              <bucket>&quot;Wealth Advisor&quot;</bucket>
              <bucket>&quot;UI/UX Developer&quot;</bucket>
              <bucket>&quot;Classroom Teacher&quot;</bucket>
              <bucket>&quot;UX Strategist&quot;</bucket>
              <bucket>&quot;Industrial Designer&quot;</bucket>
              <bucket>&quot;Financial Accountant&quot;</bucket>
              <bucket>&quot;Quality Assurance Manager&quot;</bucket>
              <bucket>&quot;Security Operations Center (SOC) Analyst&quot;</bucket>
              <bucket>&quot;Accounting Controller&quot;</bucket>
              <bucket>&quot;Competitive Intelligence Analyst&quot;</bucket>
              <bucket>&quot;Family Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Chemical Engineer&quot;</bucket>
              <bucket>&quot;Java Web Application Developer&quot;</bucket>
              <bucket>&quot;Crisis Communication Manager&quot;</bucket>
              <bucket>&quot;Brand Marketing Analyst&quot;</bucket>
              <bucket>&quot;Marketing Analytics Specialist&quot;</bucket>
              <bucket>&quot;Tax Accountant&quot;</bucket>
              <bucket>&quot;Onboarding Specialist&quot;</bucket>
              <bucket>&quot;UI/UX Front-End Developer&quot;</bucket>
              <bucket>&quot;School Psychologist&quot;</bucket>
              <bucket>&quot;Bridge Engineer&quot;</bucket>
              <bucket>&quot;Product Designer&quot;</bucket>
              <bucket>&quot;Adult Speech Therapist&quot;</bucket>
              <bucket>&quot;Financial Planner&quot;</bucket>
              <bucket>&quot;Pediatric Occupational Therapist&quot;</bucket>
              <bucket>&quot;Record Keeper&quot;</bucket>
              <bucket>&quot;Cloud Systems Engineer&quot;</bucket>
              <bucket>&quot;Surgical Physician Assistant&quot;</bucket>
              <bucket>&quot;PCB Designer&quot;</bucket>
              <bucket>&quot;Corporate Paralegal&quot;</bucket>
              <bucket>&quot;Business Systems Analyst&quot;</bucket>
              <bucket>&quot;Construction Project Manager&quot;</bucket>
              <bucket>&quot;Child Custody Lawyer&quot;</bucket>
              <bucket>&quot;IT Systems Administrator&quot;</bucket>
              <bucket>&quot;Legal Counsel&quot;</bucket>
              <bucket>&quot;Conference Manager&quot;</bucket>
              <bucket>&quot;Geriatric Physical Therapist&quot;</bucket>
              <bucket>&quot;Tax Planner&quot;</bucket>
              <bucket>&quot;Court Clerk&quot;</bucket>
              <bucket>&quot;Sales Team Leader&quot;</bucket>
              <bucket>&quot;Event Marketing Coordinator&quot;</bucket>
              <bucket>&quot;SEO Copywriter&quot;</bucket>
              <bucket>&quot;School Social Worker&quot;</bucket>
              <bucket>&quot;Brand Manager&quot;</bucket>
              <bucket>&quot;Geriatric Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Agile Product Owner&quot;</bucket>
              <bucket>&quot;Child Welfare Worker&quot;</bucket>
              <bucket>&quot;IT Business Analyst&quot;</bucket>
              <bucket>&quot;General Pediatrician&quot;</bucket>
              <bucket>&quot;Periodontal Therapist&quot;</bucket>
              <bucket>&quot;Environmental Planner&quot;</bucket>
              <bucket>&quot;Corporate Litigator&quot;</bucket>
              <bucket>&quot;Clinical Psychologist&quot;</bucket>
              <bucket>&quot;Administrative Assistant&quot;</bucket>
              <bucket>&quot;Aircraft Design Engineer&quot;</bucket>
              <bucket>&quot;Research and Development (R&amp;D) Engineer&quot;</bucket>
              <bucket>&quot;Senior Researcher&quot;</bucket>
              <bucket>&quot;Sales Trainer&quot;</bucket>
              <bucket>&quot;Analytical Chemist&quot;</bucket>
              <bucket>&quot;Accounting Manager&quot;</bucket>
              <bucket>&quot;Product Brand Manager&quot;</bucket>
              <bucket>&quot;Infrastructure Manager&quot;</bucket>
              <bucket>&quot;Systems Engineer&quot;</bucket>
              <bucket>&quot;Social Media Strategist&quot;</bucket>
              <bucket>&quot;Wedding Consultant&quot;</bucket>
              <bucket>&quot;Transportation Planner&quot;</bucket>
              <bucket>&quot;Studio Art Teacher&quot;</bucket>
              <bucket>&quot;Pediatric Surgeon&quot;</bucket>
              <bucket>&quot;Accessibility Developer&quot;</bucket>
              <bucket>&quot;Retail Sales Associate&quot;</bucket>
              <bucket>&quot;Environmental Compliance Officer&quot;</bucket>
              <bucket>&quot;E-commerce Web Designer&quot;</bucket>
              <bucket>&quot;Quality Control Manager&quot;</bucket>
              <bucket>&quot;HVAC Engineer&quot;</bucket>
              <bucket>&quot;Recruitment Coordinator&quot;</bucket>
              <bucket>&quot;Corporate Event Coordinator&quot;</bucket>
              <bucket>&quot;Network Security Specialist&quot;</bucket>
              <bucket>&quot;Digital Marketing Director&quot;</bucket>
              <bucket>&quot;Project Coordinator&quot;</bucket>
              <bucket>&quot;Environmental Impact Analyst&quot;</bucket>
              <bucket>&quot;Network Engineer&quot;</bucket>
              <bucket>&quot;Wedding Coordinator&quot;</bucket>
              <bucket>&quot;Sustainability Specialist&quot;</bucket>
              <bucket>&quot;Power Systems Engineer&quot;</bucket>
              <bucket>&quot;Digital Marketing Coordinator&quot;</bucket>
              <bucket>&quot;Purchasing Coordinator&quot;</bucket>
              <bucket>&quot;Performance Tester&quot;</bucket>
              <bucket>&quot;Instructional Designer&quot;</bucket>
              <bucket>&quot;Strategic Account Manager&quot;</bucket>
              <bucket>&quot;Database Developer&quot;</bucket>
              <bucket>&quot;Email Campaign Manager&quot;</bucket>
              <bucket>&quot;Logistics Analyst&quot;</bucket>
              <bucket>&quot;Quality Control Analyst&quot;</bucket>
              <bucket>&quot;Research Psychologist&quot;</bucket>
              <bucket>&quot;Technical Product Manager&quot;</bucket>
              <bucket>&quot;Web Designer&quot;</bucket>
              <bucket>&quot;Pediatric Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Trial Attorney&quot;</bucket>
              <bucket>&quot;Art Curator&quot;</bucket>
              <bucket>&quot;Advertising Account Executive&quot;</bucket>
              <bucket>&quot;Regional Sales Director&quot;</bucket>
              <bucket>&quot;Email Marketing Specialist&quot;</bucket>
              <bucket>&quot;Lighting Designer&quot;</bucket>
              <bucket>&quot;Procurement Specialist&quot;</bucket>
              <bucket>&quot;Backend Web Developer&quot;</bucket>
              <bucket>&quot;Help Desk Support Specialist&quot;</bucket>
              <bucket>&quot;Database Security Specialist&quot;</bucket>
              <bucket>&quot;System Administrator&quot;</bucket>
              <bucket>&quot;Help Desk Analyst&quot;</bucket>
              <bucket>&quot;Mental Health Occupational Therapist&quot;</bucket>
              <bucket>&quot;Market Research Coordinator&quot;</bucket>
              <bucket>&quot;Visual Designer&quot;</bucket>
              <bucket>&quot;Wealth Management Advisor&quot;</bucket>
              <bucket>&quot;Technical Copywriter&quot;</bucket>
              <bucket>&quot;Key Account Executive&quot;</bucket>
              <bucket>&quot;Customer Support Manager&quot;</bucket>
              <bucket>&quot;Product Demonstrator&quot;</bucket>
              <bucket>&quot;Strategic Partnerships Manager&quot;</bucket>
              <bucket>&quot;Residential Interior Designer&quot;</bucket>
              <bucket>&quot;NoSQL Database Engineer&quot;</bucket>
              <bucket>&quot;International Tax Consultant&quot;</bucket>
              <bucket>&quot;Solution Architect&quot;</bucket>
              <bucket>&quot;Charge Nurse&quot;</bucket>
              <bucket>&quot;Supplier Diversity Manager&quot;</bucket>
              <bucket>&quot;Machine Learning Engineer&quot;</bucket>
              <bucket>&quot;City Planner&quot;</bucket>
              <bucket>&quot;Orthopedic Physical Therapist&quot;</bucket>
              <bucket>&quot;Business Development Director&quot;</bucket>
              <bucket>&quot;Network Performance Analyst&quot;</bucket>
              <bucket>&quot;Litigation Paralegal&quot;</bucket>
              <bucket>&quot;Content Writer&quot;</bucket>
              <bucket>&quot;Personal Secretary&quot;</bucket>
              <bucket>&quot;Technical Writer&quot;</bucket>
              <bucket>&quot;Electronics Hardware Engineer&quot;</bucket>
              <bucket>&quot;Medical Sales Specialist&quot;</bucket>
              <bucket>&quot;Technical SEO Analyst&quot;</bucket>
              <bucket>&quot;Deliverability Analyst&quot;</bucket>
              <bucket>&quot;Subject Matter Expert&quot;</bucket>
              <bucket>&quot;Commercial Interior Designer&quot;</bucket>
              <bucket>&quot;Brand PR Specialist&quot;</bucket>
              <bucket>&quot;Systems Integration Specialist&quot;</bucket>
              <bucket>&quot;Industrial Engineer&quot;</bucket>
              <bucket>&quot;Network Support Specialist&quot;</bucket>
              <bucket>&quot;Family Counselor&quot;</bucket>
              <bucket>&quot;Exotic Animal Veterinarian&quot;</bucket>
              <bucket>&quot;Investment Portfolio Manager&quot;</bucket>
              <bucket>&quot;QA Tester&quot;</bucket>
              <bucket>&quot;Server Developer&quot;</bucket>
              <bucket>&quot;Project Architect&quot;</bucket>
              <bucket>&quot;Special Education Teacher&quot;</bucket>
              <bucket>&quot;QA Manager&quot;</bucket>
              <bucket>&quot;Pediatric Physical Therapist&quot;</bucket>
              <bucket>&quot;Construction Project Coordinator&quot;</bucket>
              <bucket>&quot;Customer Experience Strategist&quot;</bucket>
              <bucket>&quot;Brand Director&quot;</bucket>
              <bucket>&quot;B2B Sales Consultant&quot;</bucket>
              <bucket>&quot;Sales Representative&quot;</bucket>
              <bucket>&quot;Corporate Counsel&quot;</bucket>
              <bucket>&quot;Account Manager&quot;</bucket>
              <bucket>&quot;Sustainability Consultant&quot;</bucket>
              <bucket>&quot;Legal Assistant&quot;</bucket>
              <bucket>&quot;Recovery Coach&quot;</bucket>
              <bucket>&quot;Agile Project Manager&quot;</bucket>
              <bucket>&quot;Addiction Counselor&quot;</bucket>
              <bucket>&quot;Design Engineer&quot;</bucket>
              <bucket>&quot;Print Graphic Designer&quot;</bucket>
              <bucket>&quot;Human Resources Director&quot;</bucket>
              <bucket>&quot;Creative Copywriter&quot;</bucket>
              <bucket>&quot;Emergency Medicine Physician Assistant&quot;</bucket>
              <bucket>&quot;Test Automation Engineer&quot;</bucket>
              <bucket>&quot;Talent Acquisition Manager&quot;</bucket>
              <bucket>&quot;Urban Planner&quot;</bucket>
              <bucket>&quot;Data Quality Analyst&quot;</bucket>
              <bucket>&quot;Sustainable Landscape Specialist&quot;</bucket>
              <bucket>&quot;Data Engineer&quot;</bucket>
              <bucket>&quot;Sales Advisor&quot;</bucket>
              <bucket>&quot;Architectural Designer&quot;</bucket>
              <bucket>&quot;Social Science Researcher&quot;</bucket>
              <bucket>&quot;Performance Testing Specialist&quot;</bucket>
              <bucket>&quot;Speech Pathologist&quot;</bucket>
              <bucket>&quot;Community Manager&quot;</bucket>
              <bucket>&quot;Clinical Nurse Specialist&quot;</bucket>
              <bucket>&quot;Environmental Designer&quot;</bucket>
              <bucket>&quot;Transportation Engineer&quot;</bucket>
              <bucket>&quot;Wireless Network Engineer&quot;</bucket>
              <bucket>&quot;Marketing Communications Director&quot;</bucket>
              <bucket>&quot;CAD Technician&quot;</bucket>
              <bucket>&quot;SEM Analyst&quot;</bucket>
              <bucket>&quot;Risk Analyst&quot;</bucket>
              <bucket>&quot;Data Business Analyst&quot;</bucket>
              <bucket>&quot;Controls Engineer&quot;</bucket>
              <bucket>&quot;Office Coordinator&quot;</bucket>
              <bucket>&quot;Mechanical Design Engineer&quot;</bucket>
              <bucket>&quot;Big Data Engineer&quot;</bucket>
              <bucket>&quot;Full-Stack Developer&quot;</bucket>
              <bucket>&quot;Desktop Support Technician&quot;</bucket>
              <bucket>&quot;Technical Support Specialist&quot;</bucket>
              <bucket>&quot;Frontend Web Designer&quot;</bucket>
              <bucket>&quot;Technical SEO Specialist&quot;</bucket>
              <bucket>&quot;Documentation Specialist&quot;</bucket>
              <bucket>&quot;Nursing Director&quot;</bucket>
              <bucket>&quot;Acute Care Nurse Practitioner&quot;</bucket>
              <bucket>&quot;Cloud Architect&quot;</bucket>
              <bucket>&quot;Inventory Control Specialist&quot;</bucket>
              <bucket>&quot;Construction Engineer&quot;</bucket>
              <bucket>&quot;Dental Hygiene Educator&quot;</bucket>
              <bucket>&quot;API Developer&quot;</bucket>
              <bucket>&quot;HR Coordinator&quot;</bucket>
              <bucket>&quot;Primary Care Provider&quot;</bucket>
              <bucket>&quot;Pediatric Speech Therapist&quot;</bucket>
              <bucket>&quot;Quality Control Engineer&quot;</bucket>
              <bucket>&quot;Database Analyst&quot;</bucket>
              <bucket>&quot;HR Compliance Specialist&quot;</bucket>
              <bucket>&quot;Interior Designer&quot;</bucket>
              <bucket>&quot;Healthcare Business Analyst&quot;</bucket>
              <bucket>&quot;Environmental Consultant&quot;</bucket>
              <bucket>&quot;Clinical Nurse Manager&quot;</bucket>
              <bucket>&quot;Administrative Manager&quot;</bucket>
              <bucket>&quot;Treasury Manager&quot;</bucket>
              <bucket>&quot;Finance Manager&quot;</bucket>
              <bucket>&quot;ETL Developer&quot;</bucket>
              <bucket>&quot;Research Chemist&quot;</bucket>
              <bucket>&quot;Corporate Attorney&quot;</bucket>
              <bucket>&quot;Structural Engineer&quot;</bucket>
              <bucket>&quot;User Researcher&quot;</bucket>
              <bucket>&quot;Art Education Coordinator&quot;</bucket>
              <bucket>&quot;Search Engine Marketer&quot;</bucket>
              <bucket>&quot;Procurement Coordinator&quot;</bucket>
              <bucket>&quot;Market Expansion Manager&quot;</bucket>
              <bucket>&quot;Key Account Manager&quot;</bucket>
              <bucket>&quot;Avionics Engineer&quot;</bucket>
              <bucket>&quot;Architectural Drafter&quot;</bucket>
              <bucket>&quot;HVAC Systems Designer&quot;</bucket>
              <bucket>&quot;Financial Planning Manager&quot;</bucket>
              <bucket>&quot;Automation Test Engineer&quot;</bucket>
              <bucket>&quot;Staff Nurse&quot;</bucket>
              <bucket>&quot;Commercial Landscape Architect&quot;</bucket>
              <bucket>&quot;Brand Strategist&quot;</bucket>
              <bucket>&quot;Copywriter&quot;</bucket>
              <bucket>&quot;Employee Relations Specialist&quot;</bucket>
              <bucket>&quot;Nurse Educator&quot;</bucket>
              <bucket>&quot;HR Generalist&quot;</bucket>
              <bucket>&quot;Employment Lawyer&quot;</bucket>
              <bucket>&quot;Wedding Designer&quot;</bucket>
              <bucket>&quot;Paid Advertising Specialist&quot;</bucket>
              <bucket>&quot;Budget Analyst&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' included-values='in-range'>
            <min>10.0</min>
            <max>64.963099999999997</max>
          </filter>
          <slices>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]</column>
            <column>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk] / ([federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk] / [federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]))</rows>
        <cols>[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]</cols>
      </table>
      <simple-id uuid='{5810C47B-0D4B-429E-98C0-332F9AB0B19B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Additional task dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
      </datasources>
      <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
        <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='string' name='[Experience]' role='dimension' type='nominal' />
        <column datatype='string' name='[Job Portal]' role='dimension' type='nominal' />
        <column datatype='date' name='[Job Posting Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
        <column datatype='string' name='[Preference]' role='dimension' type='nominal' />
        <column datatype='string' name='[Qualifications]' role='dimension' type='nominal' />
        <column datatype='string' name='[Role]' role='dimension' type='nominal' />
        <column datatype='string' name='[Salary Range]' role='dimension' type='nominal' />
        <column datatype='string' name='[Work Type]' role='dimension' type='nominal' />
        <column-instance column='[Company Size]' derivation='Avg' name='[avg:Company Size:qk]' pivot='key' type='quantitative' />
        <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
        <column-instance column='[Company Size]' derivation='None' name='[none:Company Size:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Experience]' derivation='None' name='[none:Experience:nk]' pivot='key' type='nominal' />
        <column-instance column='[Job Portal]' derivation='None' name='[none:Job Portal:nk]' pivot='key' type='nominal' />
        <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
        <column-instance column='[Preference]' derivation='None' name='[none:Preference:nk]' pivot='key' type='nominal' />
        <column-instance column='[Qualifications]' derivation='None' name='[none:Qualifications:nk]' pivot='key' type='nominal' />
        <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
        <column-instance column='[Salary Range]' derivation='None' name='[none:Salary Range:nk]' pivot='key' type='nominal' />
        <column-instance column='[Work Type]' derivation='None' name='[none:Work Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Job Posting Date]' derivation='Year' name='[yr:Job Posting Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='5' type-v2='layout-basic' w='89378' x='483' y='999'>
              <zone h='98002' id='23' name='Task 1' w='30479' x='59382' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98002' id='50' name='Task 2' w='32045' x='27337' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98002' id='58' name='Task 3' w='26854' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98002' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='999'>
              <zone h='5028' id='24' mode='dropdown' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' w='9656' x='89861' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='25' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company Size:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='6027'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='26' mode='dropdown' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type-v2='filter' w='9656' x='89861' y='11055'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='27' mode='dropdown' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[yr:Job Posting Date:ok]' type-v2='filter' w='9656' x='89861' y='16083'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3746' id='51' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Calculation_155374189838508036:nk]' type-v2='filter' w='9656' x='89861' y='21111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='52' mode='checkdropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type-v2='filter' w='9656' x='89861' y='24857'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='53' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='29885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='54' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type-v2='filter' w='9656' x='89861' y='34913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='55' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]' type-v2='filter' w='9656' x='89861' y='39941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='56' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' w='9656' x='89861' y='44969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='57' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' type-v2='filter' w='9656' x='89861' y='49997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3746' id='59' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Calculation_155374189838508036:nk]' type-v2='filter' w='9656' x='89861' y='55025'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='60' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type-v2='filter' w='9656' x='89861' y='58771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='61' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]' type-v2='filter' w='9656' x='89861' y='63799'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='62' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='68827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='63' mode='dropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' w='9656' x='89861' y='73855'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='64' mode='dropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type-v2='filter' w='9656' x='89861' y='78883'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='65' mode='dropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Portal:nk]' type-v2='filter' w='9656' x='89861' y='83911'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5028' id='66' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type-v2='filter' w='9656' x='89861' y='88939'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5034' id='67' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]' type-v2='filter' w='9656' x='89861' y='93967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='77' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='76' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='3746' id='59' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Calculation_155374189838508036:nk]' type-v2='filter' w='9656' x='89861' y='55025'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='60' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type-v2='filter' w='9656' x='89861' y='58771'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='61' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]' type-v2='filter' w='9656' x='89861' y='63799'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='62' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='68827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='63' mode='dropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' w='9656' x='89861' y='73855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='64' mode='dropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type-v2='filter' w='9656' x='89861' y='78883'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='65' mode='dropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Portal:nk]' type-v2='filter' w='9656' x='89861' y='83911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='66' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type-v2='filter' w='9656' x='89861' y='88939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5034' id='67' mode='checkdropdown' name='Task 3' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]' type-v2='filter' w='9656' x='89861' y='93967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98002' id='58' is-fixed='true' name='Task 3' w='26854' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3746' id='51' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Calculation_155374189838508036:nk]' type-v2='filter' w='9656' x='89861' y='21111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='52' mode='checkdropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type-v2='filter' w='9656' x='89861' y='24857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='53' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='29885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='54' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type-v2='filter' w='9656' x='89861' y='34913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='55' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]' type-v2='filter' w='9656' x='89861' y='39941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='56' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' w='9656' x='89861' y='44969'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='57' mode='dropdown' name='Task 2' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' type-v2='filter' w='9656' x='89861' y='49997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98002' id='50' is-fixed='true' name='Task 2' w='32045' x='27337' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='24' mode='dropdown' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' w='9656' x='89861' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='25' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company Size:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='6027'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='26' mode='dropdown' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type-v2='filter' w='9656' x='89861' y='11055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5028' id='27' mode='dropdown' name='Task 1' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[yr:Job Posting Date:ok]' type-v2='filter' w='9656' x='89861' y='16083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98002' id='23' is-fixed='true' name='Task 1' w='30479' x='59382' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ECCC4F56-3B9F-4574-9440-AF4E49566C8F}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Training dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;JOB PORTAL DASHBOARD&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='job_descriptions' name='federated.14yi1ol17hs72s13bilb61tgayxm' />
      </datasources>
      <datasource-dependencies datasource='federated.14yi1ol17hs72s13bilb61tgayxm'>
        <column datatype='integer' name='[Company Size]' role='measure' type='quantitative' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='string' name='[Experience]' role='dimension' type='nominal' />
        <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
        <column datatype='string' name='[Preference]' role='dimension' type='nominal' />
        <column datatype='string' name='[Qualifications]' role='dimension' type='nominal' />
        <column datatype='string' name='[Role]' role='dimension' type='nominal' />
        <column datatype='string' name='[Work Type]' role='dimension' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Experience]' derivation='None' name='[none:Experience:nk]' pivot='key' type='nominal' />
        <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
        <column-instance column='[Preference]' derivation='None' name='[none:Preference:nk]' pivot='key' type='nominal' />
        <column-instance column='[Qualifications]' derivation='None' name='[none:Qualifications:nk]' pivot='key' type='nominal' />
        <column-instance column='[Role]' derivation='None' name='[none:Role:nk]' pivot='key' type='nominal' />
        <column-instance column='[Work Type]' derivation='None' name='[none:Work Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[skills]' derivation='None' name='[none:skills:nk]' pivot='key' type='nominal' />
        <column caption='Skills' datatype='string' name='[skills]' role='dimension' type='nominal' />
        <column-instance column='[Company Size]' derivation='Sum' name='[sum:Company Size:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='25' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='6242' id='26' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91760' id='14' param='horz' type-v2='layout-flow' w='99034' x='483' y='7241'>
              <zone h='91760' id='12' type-v2='layout-basic' w='89378' x='483' y='7241'>
                <zone h='45880' id='3' name='Company' w='22346' x='67515' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='5' name='Country' w='22346' x='67515' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='6' name='Experience' w='22346' x='22826' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='7' name='Preference' w='22360' x='22812' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='8' name='Qualification' w='22343' x='483' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='9' name='Salary Range' w='22329' x='483' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='10' name='Skills' w='22343' x='45172' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45880' id='11' name='Work type' w='22343' x='45172' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='91760' id='13' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='9656' x='89861' y='7241'>
                <zone h='10237' id='15' mode='checkdropdown' name='Salary Range' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' values='database' w='9656' x='89861' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10237' id='16' mode='checkdropdown' name='Country' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' type-v2='filter' values='database' w='9656' x='89861' y='17478'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10238' id='17' mode='checkdropdown' name='Country' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type-v2='filter' values='database' w='9656' x='89861' y='27715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10237' id='18' mode='checkdropdown' name='Preference' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type-v2='filter' values='database' w='9656' x='89861' y='37953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10237' id='19' mode='checkdropdown' name='Qualification' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]' type-v2='filter' values='database' w='9656' x='89861' y='48190'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10237' id='20' mode='checkdropdown' name='Work type' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type-v2='filter' values='database' w='9656' x='89861' y='58427'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10113' id='21' mode='checkdropdown' name='Experience' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]' type-v2='filter' values='database' w='9656' x='89861' y='68664'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10112' id='22' mode='checkdropdown' name='Skills' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:skills:nk]' type-v2='filter' values='database' w='9656' x='89861' y='78777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10112' id='23' name='Company' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' type-v2='filter' values='database' w='9656' x='89861' y='88889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;JOB PORTAL DASHBOARD&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2950' minheight='2950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='49' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='6242' id='26' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10237' id='15' mode='checkdropdown' name='Salary Range' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type-v2='filter' values='database' w='9656' x='89861' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='9' is-fixed='true' name='Salary Range' w='22329' x='483' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10237' id='18' mode='checkdropdown' name='Preference' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type-v2='filter' values='database' w='9656' x='89861' y='37953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='7' is-fixed='true' name='Preference' w='22360' x='22812' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10237' id='20' mode='checkdropdown' name='Work type' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type-v2='filter' values='database' w='9656' x='89861' y='58427'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='11' is-fixed='true' name='Work type' w='22343' x='45172' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10237' id='16' mode='checkdropdown' name='Country' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' type-v2='filter' values='database' w='9656' x='89861' y='17478'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10238' id='17' mode='checkdropdown' name='Country' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type-v2='filter' values='database' w='9656' x='89861' y='27715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='5' is-fixed='true' name='Country' w='22346' x='67515' y='7241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10237' id='19' mode='checkdropdown' name='Qualification' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]' type-v2='filter' values='database' w='9656' x='89861' y='48190'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='8' is-fixed='true' name='Qualification' w='22343' x='483' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10113' id='21' mode='checkdropdown' name='Experience' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]' type-v2='filter' values='database' w='9656' x='89861' y='68664'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='6' is-fixed='true' name='Experience' w='22346' x='22826' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10112' id='22' mode='checkdropdown' name='Skills' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:skills:nk]' type-v2='filter' values='database' w='9656' x='89861' y='78777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='10' is-fixed='true' name='Skills' w='22343' x='45172' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10112' id='23' name='Company' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[sum:Company Size:qk]' type-v2='filter' values='database' w='9656' x='89861' y='88889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45880' id='3' is-fixed='true' name='Company' w='22346' x='67515' y='53121'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{950222D6-B719-41C9-BCEE-462CD68A3C98}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Company'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]</field>
            <field>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D93FB3F-7D8D-43E5-88C1-5EF9A081F839}' />
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9D481BBE-0AFB-47B6-97A2-3184176ACD12}' />
    </window>
    <window class='worksheet' name='Experience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{36DB3B92-FE53-4618-906B-E0855BE3E2A6}' />
    </window>
    <window class='worksheet' name='Preference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{182E8882-29FE-4236-8B39-7D3B5BE23754}' />
    </window>
    <window class='worksheet' name='Qualification'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A3E56FCE-11A8-4EC2-AD84-A5F5E1237149}' />
    </window>
    <window class='worksheet' name='Salary Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B27464F4-1049-4324-8E6F-F1B75CE19D5C}' />
    </window>
    <window class='worksheet' name='Skills'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{47B4B615-E1FE-4F35-9589-219554BD48B0}' />
    </window>
    <window class='worksheet' name='Work type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1A382798-653E-48B1-9EE2-D59C2354C8EB}' />
    </window>
    <window class='dashboard' name='Training dashboard'>
      <viewpoints>
        <viewpoint name='Company' />
        <viewpoint name='Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Experience' />
        <viewpoint name='Preference' />
        <viewpoint name='Qualification' />
        <viewpoint name='Salary Range' />
        <viewpoint name='Skills' />
        <viewpoint name='Work type' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6E74BF56-80DE-4CBD-9841-20B29C5CDB1E}' />
    </window>
    <window class='worksheet' name='Task 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type='filter' />
            <card param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Company Size:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[yr:Job Posting Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{59A2BC8A-8DE1-4C6D-830C-0467290A1876}' />
    </window>
    <window class='worksheet' name='Task 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type='filter' />
            <card param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:latitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Qualifications:nk]' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Role:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Calculation_155374189838508036:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A02A9707-2AF4-490B-8772-DDB89A393368}' />
    </window>
    <window class='worksheet' name='Task 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Country:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Experience:nk]' type='filter' />
            <card param='[federated.14yi1ol17hs72s13bilb61tgayxm].[avg:Company Size:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Title:nk]' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Preference:nk]' type='filter' />
            <card mode='dropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Job Portal:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Work Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Salary Range:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14yi1ol17hs72s13bilb61tgayxm].[none:Calculation_155374189838508036:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE5F4300-B358-4372-8BF8-DEE3332E5C33}' />
    </window>
    <window class='dashboard' maximized='true' name='Additional task dashboard'>
      <viewpoints>
        <viewpoint name='Task 1' />
        <viewpoint name='Task 2' />
        <viewpoint name='Task 3' />
      </viewpoints>
      <active id='58' />
      <simple-id uuid='{87709F8C-2A62-4738-9708-61EEEE29A438}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Additional task dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Company' width='192'>
      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
      SwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country' width='192'>
      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
      HN+Rmdw/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Experience' width='192'>
      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
      uPIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Preference' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Qualification' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salary Range' width='192'>
      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
      A+tSFO2ciABWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Skills' width='192'>
      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
      AIS6dHJyz6MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='127' name='Task 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB/CAYAAAC5QM2nAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASnklEQVR4nO3de1hU17nH8a+ZQAYRBUQLIgiIFUTjIBcDQg9RH1PMBQ4aObHS0JA4VpqS
      GG3SmErgsadJrY02WiQRL6H10iR9NDbhSLXRqFBFLooBbIgQMUIFBPXATOGZ4/ljBhlFGQZF
      oPv9/JXA3mvWGua399p71rsdcv369esIoVAP9HcHhOhPEgChaBIAoWgSAKFoEgChaBIAoWgS
      AKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgCh
      aBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSADGgtba29mn7EgChaBIAoWgP9ncHhLBk
      yJAhfda2BEAMeI3Hv99nbQ+MAFTs4OV3DqN+7DV+Fefd373pQwYaCnfw/s4TVF9rA5Udjh6T
      mTNvAVHfHY6qv7vXayVkaT9hTNoqol37uy/WGRDXABVFRUxOTMC9oJiq/u5ML5Vkackq6X6b
      lvwM0vbbE/vzNfw+M5PM9b/kxbnuVH1xgvrOlsjSZmGhKavV5aSTnlN3j1vtoCEp05oPfx05
      6en0WXesMAACUEFRkT9BocEEuRdQPFgTYNEVCo59TVhcHP4j1cajvY09Y6dG8/zzsxlkB85/
      G/0/Baooosg/iHiVmvYgdz49fZ44b8+bt2mv4ej27XxUVIPOYIvLw0/yfNIcvNWA4Sql+zaz
      6+BZGtpU2HmEkZicgMYJoIXKnG1s3/8ll3QGbF0eZu6PEon2tTc1XEdO+nuw+OajV0mWlsKg
      TJI0Hdt8isuShzn3h0/Ir7yEDkcCFqSQHDUGVV0O6al7+BbghJYTpjZCf9yxf4dhOAxvpb6h
      BbDndupy0knd8y3Gpm60xI8zk9CY+uG2KokJlXvJ2LCfr6YsJjNJAy2VHNz5ITmnqjHOrDyY
      tuA5fhQ+BhUlZGkzTP1KRbvH2Kp7bBqrol25dVpm6zKRWT/QEjvJrI8tlRzcuYt9RTXoDCrs
      Rvsywd6dGa/FYxxiCVnaQoIyk+gYckvZbn635ahxqmfrgFfoM7ywMAiX0iy0GaaxpWoxdsed
      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
      BSH9N3WSegDFKSErvZbHb3zPMrBJSaQQfUhWg4oBb+T0/+mztmUKJAa0vi6JlDOAGPD68p9K
      lQCIAU+K4oXoIxIAoWgSAKFoEgChaHIbVCianAGEokkAhKJJAISiSQCEokkAhKJJAISiyVog
      MbgYGijcsYnsfOM/mOgRlsCSjgec9YJ8DyAGET2l295guyGelT8MwYkmCj74JbtVz7K6lw/f
      kimQGDwuH+OzynCSE0OMD+eycSIkMZnwys841svHUUgAxKChP1tO87TAzsc3Aqi8CZzWTPnZ
      3j1+TgIgBo3m5suMdO76sBpn55Fcbm7uVZsSADGoODl2fXTjCEenXrcnARCDSlPzlS4/u9Lc
      1Ov2JABi0HB0dKbxcter3cuXG3F2dOxVmxIAMWioJ/rjWFR887NPDVUUFzniP7F3zzWVAIjB
      w3kGc33z2LitwPj80fYmCrZtJM93LjN6+WxZ+SJMDC7yTbAQ945MgYSiSQCEokkAhKJJAISi
      SQCEokkAhKJJAISiSQCEokkAhKJJAISiSQCEokkAhKJJAISiSQCEokkAhKJJAISiSQCEokkA
      hKJJAISiSQCEokkAhKJJAISiSQCEokkAhKJJAISiSQCEokkAhKJJAISiSQCEokkAhKJJAISi
      SQCEokkAhKJJAISiSQCEov0/dZg6oeF3+IIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Task 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='107' name='Task 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Training dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Work type' width='192'>
      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
      Vsp5fzcampUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
  <_.fcp.WorkbookOptimizerRuleConfig.true...workbook-optimizer>
    <rule-config>
      <rule ignored='true' ruleID='5' />
      <rule ignored='true' ruleID='6' />
      <rule ignored='true' ruleID='12' />
      <rule ignored='true' ruleID='13' />
      <rule ignored='true' ruleID='15' />
    </rule-config>
  </_.fcp.WorkbookOptimizerRuleConfig.true...workbook-optimizer>
</workbook>
